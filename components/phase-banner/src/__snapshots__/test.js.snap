// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PhaseBanner matches wrapper snapshot: wrapper mount 1`] = `
.c3 {
  display: inline-block;
  margin: 0 8px 0 0;
  padding: 2px 5px;
  font-family: "nta",Arial,sans-serif;
  font-weight: 700;
  font-size: 14px;
  line-height: 1.1428571429;
  text-transform: uppercase;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #ffffff;
  background-color: #005ea5;
  -webkit-font-mmoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c2 {
  margin-bottom: 0;
}

.c1 {
  border-bottom: 1px solid #bfc1c3;
  box-sizing: border-box;
  padding-top: 10px;
  padding-bottom: 10px;
  font-family: "nta",Arial,sans-serif;
  font-weight: 400;
  text-transform: none;
  font-size: 14px;
  line-height: 1.1428571429;
}

.c1 > a {
  color: #005ea5;
}

.c0 {
  margin-bottom: 0;
}

@media only screen and (min-width:641px) {
  .c3 {
    font-size: 16px;
    line-height: 1.25;
    padding-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 0;
  }
}

<Styled(PhaseBanner)
  level="beta"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(PhaseBanner)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    level="beta"
  >
    <PhaseBanner
      className="c0"
      level="beta"
    >
      <styled.div
        className="c0"
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": true,
                "lastClassName": "c1",
                "rules": Array [
                  "border-bottom: 1px solid #bfc1c3; box-sizing: border-box; padding-top: 10px; padding-bottom: 10px; font-family: \\"nta\\", Arial, sans-serif; font-weight: 400; text-transform: none; font-size: 14px; line-height: 1.1428571429; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
} > a {
  color: #005ea5;
}",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0 c1"
          >
            <Styled(PhaseBadge)>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-ifAKCX",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Styled(PhaseBadge)",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "margin": [Function],
                      "mb": [Function],
                      "padding": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "sc-ifAKCX",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
              >
                <PhaseBadge
                  className="c2"
                >
                  <styled.strong
                    className="c2"
                  >
                    <StyledComponent
                      className="c2"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bxivhb",
                            "isStatic": true,
                            "lastClassName": "c3",
                            "rules": Array [
                              "display: inline-block; margin: 0 8px 0 0; padding: 2px 5px; font-family: \\"nta\\", Arial, sans-serif; font-weight: 700; font-size: 14px; line-height: 1.1428571429; text-transform: uppercase; letter-spacing: 1px; text-decoration: none; color: #ffffff; background-color: #005ea5; -webkit-font-mmoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25; padding-bottom: 0;
}",
                            ],
                          },
                          "displayName": "styled.strong",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bxivhb",
                          "target": "strong",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <strong
                        className="c2 c3"
                      >
                        beta
                      </strong>
                    </StyledComponent>
                  </styled.strong>
                </PhaseBadge>
              </StyledComponent>
            </Styled(PhaseBadge)>
            example
          </div>
        </StyledComponent>
      </styled.div>
    </PhaseBanner>
  </StyledComponent>
</Styled(PhaseBanner)>
`;
