// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileUpload matches snapshot: enzyme.mount 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
}

.c2:after {
  content: '';
  display: table;
  clear: both;
}

.c1 {
  margin-bottom: 0;
}

.c4 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: block;
  clear: none;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  padding-bottom: 2px;
}

.c3 {
  margin-bottom: 0;
}

.c5 {
  box-sizing: border-box;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  text-transform: none;
  font-size: 14px;
  line-height: 1.1428571429;
  width: 100%;
  padding: 5px 4px 4px;
}

.c0 {
  margin-bottom: 20px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    font-size: 19px;
    line-height: 1.3;
  }
}

@media only screen and (min-width:641px) {
  .c3 {
    margin-bottom: 0;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 16px;
    line-height: 1.25;
    width: 50%;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 30px;
  }
}

<Styled(FileUpload)>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-gqjmRU",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(FileUpload)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-gqjmRU",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
  >
    <FileUpload
      className="c0"
      meta={Object {}}
    >
      <Styled(Label)
        className="c0"
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "Styled(Label)",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "margin": [Function],
                "mb": [Function],
                "padding": [Function],
              },
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            }
          }
          forwardedRef={null}
        >
          <Label
            className="c0 c1"
          >
            <styled.label
              className="c0 c1"
            >
              <StyledComponent
                className="c0 c1"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bxivhb",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "display: flex; flex-direction: column; box-sizing: border-box; :after {
  content: ''; display: table; clear: both;
}",
                        [Function],
                      ],
                    },
                    "displayName": "styled.label",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bxivhb",
                    "target": "label",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <label
                  className="c0 c1 c2"
                >
                  <Styled(LabelText)>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Styled(LabelText)",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "margin": [Function],
                            "mb": [Function],
                            "padding": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <LabelText
                        className="c3"
                      >
                        <styled.span
                          className="c3"
                        >
                          <StyledComponent
                            className="c3"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-EHOje",
                                  "isStatic": false,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; display: block; clear: none; font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3;
} color: #0b0c0c; padding-bottom: 2px;",
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.span",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-EHOje",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <span
                              className="c3 c4"
                            >
                              example
                            </span>
                          </StyledComponent>
                        </styled.span>
                      </LabelText>
                    </StyledComponent>
                  </Styled(LabelText)>
                  <styled.input
                    type="file"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gZMcBi",
                            "isStatic": true,
                            "lastClassName": "c5",
                            "rules": Array [
                              "box-sizing: border-box; font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; font-weight: 400; text-transform: none; font-size: 14px; line-height: 1.1428571429; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25; width: 50%;
} width: 100%; padding: 5px 4px 4px;",
                            ],
                          },
                          "displayName": "styled.input",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gZMcBi",
                          "target": "input",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      type="file"
                    >
                      <input
                        className="c5"
                        type="file"
                      />
                    </StyledComponent>
                  </styled.input>
                </label>
              </StyledComponent>
            </styled.label>
          </Label>
        </StyledComponent>
      </Styled(Label)>
    </FileUpload>
  </StyledComponent>
</Styled(FileUpload)>
`;
