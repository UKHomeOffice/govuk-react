// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Label matches withError snapshot: with error mount 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
  border-left: 4px solid #b10e1e;
  margin-right: 15px;
  padding-left: 10px;
}

.c1:after {
  content: '';
  display: table;
  clear: both;
}

.c0 {
  margin-bottom: 0;
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 0;
  }
}

<Styled(Label)
  error="example"
>
  <StyledComponent
    error="example"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(Label)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
  >
    <Label
      className="c0"
      error="example"
    >
      <styled.label
        className="c0"
        error="example"
      >
        <StyledComponent
          className="c0"
          error="example"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "display: flex; flex-direction: column; box-sizing: border-box; :after {
  content: ''; display: table; clear: both;
}",
                  [Function],
                ],
              },
              "displayName": "styled.label",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "label",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <label
            className="c0 c1"
          >
            example
          </label>
        </StyledComponent>
      </styled.label>
    </Label>
  </StyledComponent>
</Styled(Label)>
`;

exports[`Label matches wrapper snapshot: wrapper mount 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  box-sizing: border-box;
}

.c1:after {
  content: '';
  display: table;
  clear: both;
}

.c0 {
  margin-bottom: 0;
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 0;
  }
}

<Styled(Label)>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-ifAKCX",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(Label)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-ifAKCX",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
  >
    <Label
      className="c0"
    >
      <styled.label
        className="c0"
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "display: flex; flex-direction: column; box-sizing: border-box; :after {
  content: ''; display: table; clear: both;
}",
                  [Function],
                ],
              },
              "displayName": "styled.label",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "label",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <label
            className="c0 c1"
          >
            example
          </label>
        </StyledComponent>
      </styled.label>
    </Label>
  </StyledComponent>
</Styled(Label)>
`;
