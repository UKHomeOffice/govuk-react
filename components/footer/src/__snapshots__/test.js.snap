// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Footer matches default snapshot: Footer 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c7 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c7:link {
  color: #005ea5;
}

.c7:visited {
  color: #4c2c92;
}

.c7:hover {
  color: #2b8cc4;
}

.c7:active {
  color: #2b8cc4;
}

.c7:focus {
  color: #0b0c0c;
}

.c7:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c6:link,
.c6:visited {
  color: #454a4c;
}

.c6:hover {
  color: #171819;
}

=======
>>>>>>> Footer component (#651)
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

.c4 {
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

.c5 {
  display: inline-block;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c7 {
    font-family: sans-serif;
  }
}

@media print {
  .c7[href^="/"]::after,
  .c7[href^="http://"]::after,
  .c7[href^="https://"]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
=======
>>>>>>> Footer component (#651)
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    margin-bottom: 0;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<_default>
  <Footer
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
            [Function],
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
  >
    <styled.footer
      role="contentinfo"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                [Function],
              ],
            },
            "displayName": "styled.footer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        role="contentinfo"
      >
        <footer
          className="c0"
          role="contentinfo"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <MetaContainer>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c2"
                      >
                        <styled.div
                          grow={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={true}
                          >
                            <div
                              className="c3"
                            >
                              <Licence>
                                <div>
                                  <styled.svg
                                    focusable="false"
                                    height="17"
                                    role="presentation"
                                    viewBox="0 0 483.2 195.7"
                                    width="41"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <StyledComponent
                                      focusable="false"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="17"
                                      role="presentation"
                                      viewBox="0 0 483.2 195.7"
                                      width="41"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="c4"
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": true,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display: inline-block;",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c5"
                                      >
<<<<<<< HEAD
                                        All content is available under the
                                         
                                        <FooterLink
                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                          rel="license"
                                        >
                                          <Styled(LinkDocumented)
                                            href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                            rel="license"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
                                                    "isStatic": true,
                                                    "lastClassName": "c6",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <LinkDocumented
                                                className="c6"
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                muted={false}
                                                noVisitedState={false}
                                                rel="license"
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c6"
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  rel="license"
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c6"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c6 c7"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      rel="license"
                                                    >
                                                      Open Government Licence v3.0
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
                                        </FooterLink>
                                        , except where otherwise stated
=======
                                        All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </div>
                              </Licence>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </MetaContainer>
              </div>
            </StyledComponent>
          </styled.div>
        </footer>
      </StyledComponent>
    </styled.footer>
  </Footer>
</_default>
`;

exports[`Footer matches with copyright snapshot: FooterWithCopyright 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c7 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c7:link {
  color: #005ea5;
}

.c7:visited {
  color: #4c2c92;
}

.c7:hover {
  color: #2b8cc4;
}

.c7:active {
  color: #2b8cc4;
}

.c7:focus {
  color: #0b0c0c;
}

.c7:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c6:link,
.c6:visited {
  color: #454a4c;
}

.c6:hover {
  color: #171819;
}

=======
>>>>>>> Footer component (#651)
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c8 {
=======
.c6 {
>>>>>>> Footer component (#651)
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
}

.c4 {
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

.c5 {
  display: inline-block;
}

<<<<<<< HEAD
.c9 {
=======
.c7 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  min-width: 125px;
  padding-top: 112px;
  background-image: url();
  background-repeat: no-repeat;
  background-position: 50% 0%;
  background-size: 125px 102px;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c7:link {
  color: #005ea5;
}

.c7:visited {
  color: #4c2c92;
}

.c7:hover {
  color: #2b8cc4;
}

.c7:active {
  color: #2b8cc4;
}

.c7:focus {
  color: #0b0c0c;
}

.c7:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

<<<<<<< HEAD
.c9:link,
.c9:visited {
  color: #454a4c;
}

.c9:hover {
=======
.c7:link,
.c7:visited {
  color: #454a4c;
}

.c7:hover {
>>>>>>> Footer component (#651)
  color: #171819;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c7 {
    font-family: sans-serif;
  }
}

@media print {
  .c7[href^="/"]::after,
  .c7[href^="http://"]::after,
  .c7[href^="https://"]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
=======
>>>>>>> Footer component (#651)
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    margin-bottom: 0;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c7 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c7[href^="/"]::after,
  .c7[href^="http://"]::after,
  .c7[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithCopyright>
  <Footer
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
            [Function],
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    copyright={
      Object {
        "image": Object {
          "height": 102,
          "source": "",
          "width": 125,
        },
        "link": "https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/",
        "text": "Crown copyright",
      }
    }
  >
    <styled.footer
      role="contentinfo"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                [Function],
              ],
            },
            "displayName": "styled.footer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        role="contentinfo"
      >
        <footer
          className="c0"
          role="contentinfo"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <MetaContainer
                  copyright={
                    Object {
                      "image": Object {
                        "height": 102,
                        "source": "",
                        "width": 125,
                      },
                      "link": "https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/",
                      "text": "Crown copyright",
                    }
                  }
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c2"
                      >
                        <styled.div
                          grow={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
<<<<<<< HEAD
                                  "lastClassName": "c8",
=======
                                  "lastClassName": "c6",
>>>>>>> Footer component (#651)
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={true}
                          >
                            <div
                              className="c3"
                            >
                              <Licence>
                                <div>
                                  <styled.svg
                                    focusable="false"
                                    height="17"
                                    role="presentation"
                                    viewBox="0 0 483.2 195.7"
                                    width="41"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <StyledComponent
                                      focusable="false"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="17"
                                      role="presentation"
                                      viewBox="0 0 483.2 195.7"
                                      width="41"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="c4"
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": true,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display: inline-block;",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c5"
                                      >
<<<<<<< HEAD
                                        All content is available under the
                                         
                                        <FooterLink
                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                          rel="license"
                                        >
                                          <Styled(LinkDocumented)
                                            href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                            rel="license"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
                                                    "isStatic": true,
                                                    "lastClassName": "c6",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <LinkDocumented
                                                className="c6"
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                muted={false}
                                                noVisitedState={false}
                                                rel="license"
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c6"
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  rel="license"
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c6"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c6 c7"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      rel="license"
                                                    >
                                                      Open Government Licence v3.0
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
                                        </FooterLink>
                                        , except where otherwise stated
=======
                                        All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </div>
                              </Licence>
                            </div>
                          </StyledComponent>
                        </styled.div>
                        <styled.div
                          grow={false}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
<<<<<<< HEAD
                                  "lastClassName": "c8",
=======
                                  "lastClassName": "c6",
>>>>>>> Footer component (#651)
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={false}
                          >
                            <div
<<<<<<< HEAD
                              className="c8"
=======
                              className="c6"
>>>>>>> Footer component (#651)
                            >
                              <Copyright
                                image={
                                  Object {
                                    "height": 102,
                                    "source": "",
                                    "width": 125,
                                  }
                                }
                                link="https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/"
                                text="Crown copyright"
                              >
                                <Styled(styled.a)
                                  href="https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/"
                                  image={
                                    Object {
                                      "height": 102,
                                      "source": "",
                                      "width": 125,
                                    }
                                  }
                                  muted={false}
                                  noVisitedState={false}
                                  textColour={false}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-iwsKbI",
                                          "isStatic": false,
<<<<<<< HEAD
                                          "lastClassName": "c9",
=======
                                          "lastClassName": "c7",
>>>>>>> Footer component (#651)
                                          "rules": Array [
                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                            [Function],
                                            [Function],
                                            [Function],
                                            "display: inline-block; text-align: center; text-decoration: none; white-space: nowrap; :link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                            [Function],
                                          ],
                                        },
                                        "defaultProps": Object {
                                          "muted": false,
                                          "noVisitedState": false,
                                          "textColour": false,
                                        },
                                        "displayName": "Styled(styled.a)",
                                        "foldedComponentIds": Array [
                                          "sc-htpNat",
                                        ],
                                        "propTypes": undefined,
                                        "render": [Function],
                                        "styledComponentId": "sc-iwsKbI",
                                        "target": "a",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    href="https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/"
                                    image={
                                      Object {
                                        "height": 102,
                                        "source": "",
                                        "width": 125,
                                      }
                                    }
                                    muted={false}
                                    noVisitedState={false}
                                    textColour={false}
                                  >
                                    <a
<<<<<<< HEAD
                                      className="c9"
=======
                                      className="c7"
>>>>>>> Footer component (#651)
                                      href="https://www.nationalarchives.gov.uk/information-management/re-using-public-sector-information/uk-government-licensing-framework/crown-copyright/"
                                      muted={false}
                                    >
                                      © 
                                      Crown copyright
                                    </a>
                                  </StyledComponent>
                                </Styled(styled.a)>
                              </Copyright>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </MetaContainer>
              </div>
            </StyledComponent>
          </styled.div>
        </footer>
      </StyledComponent>
    </styled.footer>
  </Footer>
</FooterWithCopyright>
`;

exports[`Footer matches with custom width snapshot: FooterWithCustomWidth 1`] = `
<<<<<<< HEAD
.c7 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c7:link {
  color: #005ea5;
}

.c7:visited {
  color: #4c2c92;
}

.c7:hover {
  color: #2b8cc4;
}

.c7:active {
  color: #2b8cc4;
}

.c7:focus {
  color: #0b0c0c;
}

.c7:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c6:link,
.c6:visited {
  color: #454a4c;
}

.c6:hover {
  color: #171819;
}

=======
>>>>>>> Footer component (#651)
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

.c4 {
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

.c5 {
  display: inline-block;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

.c1 {
  max-width: 960px;
  margin: 0 15px;
  max-width: inherit;
}

@media print {
<<<<<<< HEAD
  .c7 {
    font-family: sans-serif;
  }
}

@media print {
  .c7[href^="/"]::after,
  .c7[href^="http://"]::after,
  .c7[href^="https://"]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
=======
>>>>>>> Footer component (#651)
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    margin-bottom: 0;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 30px;
  }
}

<FooterWithCustomWidth>
  <Footer
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-kAzzGY",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
            [Function],
            "max-width: inherit; @media only screen and (min-width: 1020px) {
  margin: 0 30px;
}",
          ],
        },
        "displayName": "Styled(styled.div)",
        "foldedComponentIds": Array [
          "sc-bdVaJa",
        ],
        "render": [Function],
        "styledComponentId": "sc-kAzzGY",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
  >
    <styled.footer
      role="contentinfo"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                [Function],
              ],
            },
            "displayName": "styled.footer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        role="contentinfo"
      >
        <footer
          className="c0"
          role="contentinfo"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-kAzzGY",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                      [Function],
                      "max-width: inherit; @media only screen and (min-width: 1020px) {
  margin: 0 30px;
}",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "foldedComponentIds": Array [
                    "sc-bdVaJa",
                  ],
                  "render": [Function],
                  "styledComponentId": "sc-kAzzGY",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <MetaContainer>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c2"
                      >
                        <styled.div
                          grow={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={true}
                          >
                            <div
                              className="c3"
                            >
                              <Licence>
                                <div>
                                  <styled.svg
                                    focusable="false"
                                    height="17"
                                    role="presentation"
                                    viewBox="0 0 483.2 195.7"
                                    width="41"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <StyledComponent
                                      focusable="false"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="17"
                                      role="presentation"
                                      viewBox="0 0 483.2 195.7"
                                      width="41"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="c4"
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": true,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display: inline-block;",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c5"
                                      >
<<<<<<< HEAD
                                        All content is available under the
                                         
                                        <FooterLink
                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                          rel="license"
                                        >
                                          <Styled(LinkDocumented)
                                            href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                            rel="license"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
                                                    "isStatic": true,
                                                    "lastClassName": "c6",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <LinkDocumented
                                                className="c6"
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                muted={false}
                                                noVisitedState={false}
                                                rel="license"
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c6"
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  rel="license"
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c6"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c6 c7"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      rel="license"
                                                    >
                                                      Open Government Licence v3.0
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
                                        </FooterLink>
                                        , except where otherwise stated
=======
                                        All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </div>
                              </Licence>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </MetaContainer>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </footer>
      </StyledComponent>
    </styled.footer>
  </Footer>
</FooterWithCustomWidth>
`;

exports[`Footer matches with meta custom snapshot: FooterWithMetaCustom 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c6 {
=======
.c5 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c6:link {
  color: #005ea5;
}

.c6:visited {
  color: #4c2c92;
}

.c6:hover {
  color: #2b8cc4;
}

.c6:active {
  color: #2b8cc4;
}

.c6:focus {
  color: #0b0c0c;
}

.c6:focus {
=======
.c5:link {
  color: #005ea5;
}

.c5:visited {
  color: #4c2c92;
}

.c5:hover {
  color: #2b8cc4;
}

.c5:active {
  color: #2b8cc4;
}

.c5:focus {
  color: #0b0c0c;
}

.c5:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c5:link,
.c5:visited {
  color: #454a4c;
}

.c5:hover {
  color: #171819;
}

.c4 {
  margin-bottom: 20px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c7 {
=======
.c6 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c8 {
=======
.c7 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c6 {
=======
  .c5 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c6[href^="/"]::after,
  .c6[href^="http://"]::after,
  .c6[href^="https://"]::after {
=======
  .c5[href^="/"]::after,
  .c5[href^="http://"]::after,
  .c5[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c7 {
=======
  .c6 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithMetaCustom>
  <Footer
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
            [Function],
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    meta={
      <ForwardRef>
        Built by the 
        <FooterLink
          href="/"
        >
          Government Digital Service
        </FooterLink>
      </ForwardRef>
    }
  >
    <styled.footer
      role="contentinfo"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                [Function],
              ],
            },
            "displayName": "styled.footer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        role="contentinfo"
      >
        <footer
          className="c0"
          role="contentinfo"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <MetaContainer>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c2"
                      >
                        <styled.div
                          grow={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={true}
                          >
                            <div
                              className="c3"
                            >
                              <styled.div>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-EHOje",
                                        "isStatic": true,
                                        "lastClassName": "c4",
                                        "rules": Array [
                                          "margin-bottom: 20px;",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-EHOje",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c4"
                                  >
                                    Built by the 
                                    <FooterLink
                                      href="/"
                                    >
<<<<<<< HEAD
                                      <Styled(LinkDocumented)
                                        href="/"
=======
                                      <Styled(styled.a)
                                        href="/"
                                        muted={false}
                                        noVisitedState={false}
                                        textColour={false}
>>>>>>> Footer component (#651)
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                "isStatic": true,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                ],
                                              },
                                              "displayName": "Styled(LinkDocumented)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bxivhb",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          href="/"
                                        >
                                          <LinkDocumented
                                            className="c5"
                                            href="/"
                                            muted={false}
                                            noVisitedState={false}
                                            textColour={false}
                                          >
                                            <styled.a
                                              className="c5"
                                              href="/"
                                              muted={false}
                                              noVisitedState={false}
                                              textColour={false}
                                            >
                                              <StyledComponent
                                                className="c5"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-htpNat",
                                                      "isStatic": false,
                                                      "lastClassName": "c6",
                                                      "rules": Array [
                                                        "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                        ":link {
=======
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                  ":link {
>>>>>>> Footer component (#651)
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
<<<<<<< HEAD
                                                        "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                        "@media print {
=======
                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                  "@media print {
>>>>>>> Footer component (#651)
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
<<<<<<< HEAD
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "defaultProps": Object {
                                                      "muted": false,
                                                      "noVisitedState": false,
                                                      "textColour": false,
                                                    },
                                                    "displayName": "styled.a",
                                                    "foldedComponentIds": Array [],
                                                    "propTypes": undefined,
                                                    "render": [Function],
                                                    "styledComponentId": "sc-htpNat",
                                                    "target": "a",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                href="/"
                                                muted={false}
                                                noVisitedState={false}
                                                textColour={false}
                                              >
                                                <a
                                                  className="c5 c6"
                                                  href="/"
                                                  muted={false}
                                                >
                                                  Government Digital Service
                                                </a>
                                              </StyledComponent>
                                            </styled.a>
                                          </LinkDocumented>
                                        </StyledComponent>
                                      </Styled(LinkDocumented)>
=======
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                ],
                                              },
                                              "defaultProps": Object {
                                                "muted": false,
                                                "noVisitedState": false,
                                                "textColour": false,
                                              },
                                              "displayName": "Styled(styled.a)",
                                              "foldedComponentIds": Array [
                                                "sc-htpNat",
                                              ],
                                              "propTypes": undefined,
                                              "render": [Function],
                                              "styledComponentId": "sc-bxivhb",
                                              "target": "a",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          href="/"
                                          muted={false}
                                          noVisitedState={false}
                                          textColour={false}
                                        >
                                          <a
                                            className="c5"
                                            href="/"
                                            muted={false}
                                          >
                                            Government Digital Service
                                          </a>
                                        </StyledComponent>
                                      </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                    </FooterLink>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                              <Licence>
                                <div>
                                  <styled.svg
                                    focusable="false"
                                    height="17"
                                    role="presentation"
                                    viewBox="0 0 483.2 195.7"
                                    width="41"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <StyledComponent
                                      focusable="false"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c7",
=======
                                            "lastClassName": "c6",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="17"
                                      role="presentation"
                                      viewBox="0 0 483.2 195.7"
                                      width="41"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
<<<<<<< HEAD
                                        className="c7"
=======
                                        className="c6"
>>>>>>> Footer component (#651)
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c8",
=======
                                            "lastClassName": "c7",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "display: inline-block;",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
<<<<<<< HEAD
                                        className="c8"
                                      >
                                        All content is available under the
                                         
                                        <FooterLink
                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                          rel="license"
                                        >
                                          <Styled(LinkDocumented)
                                            href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                            rel="license"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
                                                    "isStatic": true,
                                                    "lastClassName": "c5",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <LinkDocumented
                                                className="c5"
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                muted={false}
                                                noVisitedState={false}
                                                rel="license"
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c5"
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  rel="license"
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c5"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c6",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c5 c6"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      rel="license"
                                                    >
                                                      Open Government Licence v3.0
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
                                        </FooterLink>
                                        , except where otherwise stated
=======
                                        className="c7"
                                      >
                                        All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </div>
                              </Licence>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </MetaContainer>
              </div>
            </StyledComponent>
          </styled.div>
        </footer>
      </StyledComponent>
    </styled.footer>
  </Footer>
</FooterWithMetaCustom>
`;

exports[`Footer matches with meta links and custom snapshot: FooterWithMetaLinksAndCustom 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  margin-bottom: 20px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c12 {
=======
.c11 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.0416666666666667;
  display: block;
  margin-top: 0;
  margin-bottom: 20px;
}

.c4 {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: 0 !important;
  overflow: hidden !important;
  -webkit-clip: rect(0 0 0 0) !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  border: 0 !important;
  white-space: nowrap !important;
  padding: 0 !important;
}

.c6 {
  margin-top: 0;
  margin-bottom: 15px;
  padding: 0;
}

.c7 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 5px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c11 {
=======
  .c10 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 24px;
    line-height: 1.05;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 36px;
    line-height: 1.1111111111111112;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 30px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithMetaLinksAndCustom>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Footer
        container={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        meta={
          <React.Fragment>
            <MetaLinks
              heading="Support links"
            >
              <FooterLink
                href="/"
              >
                Item 1
              </FooterLink>
              <FooterLink
                as={[Function]}
                to="/footer-meta-item-2"
              >
                Item 2 (Router Link)
              </FooterLink>
              <FooterLink
                href="/"
              >
                Item 3
              </FooterLink>
            </MetaLinks>
            <ForwardRef>
              Built by the 
              <FooterLink
                href="/"
              >
                Government Digital Service
              </FooterLink>
            </ForwardRef>
          </React.Fragment>
        }
      >
        <styled.footer
          role="contentinfo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                    [Function],
                  ],
                },
                "displayName": "styled.footer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            role="contentinfo"
          >
            <footer
              className="c0"
              role="contentinfo"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                          [Function],
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <MetaContainer>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <styled.div
                              grow={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                        [Function],
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "grow": false,
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "grow": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={true}
                              >
                                <div
                                  className="c3"
                                >
                                  <MetaLinks
                                    heading="Support links"
                                  >
                                    <styled.span
                                      focusable={false}
                                      important={true}
                                    >
                                      <StyledComponent
                                        focusable={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "c4",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "focusable": false,
                                              "important": true,
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "propTypes": undefined,
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        important={true}
                                      >
                                        <span
                                          className="c4"
                                          focusable={false}
                                        >
                                          <H2>
                                            <Heading
                                              as="h2"
                                              size="LARGE"
                                            >
                                              <styled.h1
                                                as="h2"
                                                size="LARGE"
                                              >
                                                <StyledComponent
                                                  as="h2"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gZMcBi",
                                                        "isStatic": false,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "color: #0b0c0c; @media print {
  color: #000;
}",
                                                          [Function],
                                                          "display: block; margin-top: 0;",
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.h1",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gZMcBi",
                                                      "target": "h1",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  size="LARGE"
                                                >
                                                  <h2
                                                    className="c5"
                                                    size="LARGE"
                                                  >
                                                    Support links
                                                  </h2>
                                                </StyledComponent>
                                              </styled.h1>
                                            </Heading>
                                          </H2>
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                    <styled.ul
                                      inline={true}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "columns": undefined,
                                              "inline": false,
                                            },
                                            "displayName": "styled.ul",
                                            "foldedComponentIds": Array [],
                                            "propTypes": Object {
                                              "columns": [Function],
                                              "inline": [Function],
                                            },
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inline={true}
                                      >
                                        <ul
                                          className="c6"
                                        >
                                          <styled.li
                                            inline={true}
                                            key="0"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
>>>>>>> Footer component (#651)
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
<<<<<<< HEAD
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
=======
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
>>>>>>> Footer component (#651)
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
<<<<<<< HEAD
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 1
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
=======
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 1
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
>>>>>>> Footer component (#651)
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="1"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  as={[Function]}
                                                  to="/footer-meta-item-2"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    as={[Function]}
=======
                                                  <Styled(styled.a)
                                                    as={[Function]}
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                    to="/footer-meta-item-2"
                                                  >
                                                    <StyledComponent
                                                      as={[Function]}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
<<<<<<< HEAD
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
>>>>>>> Footer component (#651)
                                                      to="/footer-meta-item-2"
                                                    >
                                                      <Link
                                                        className="c8"
<<<<<<< HEAD
=======
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
>>>>>>> Footer component (#651)
                                                        to="/footer-meta-item-2"
                                                      >
                                                        <a
                                                          className="c8"
                                                          href="/footer-meta-item-2"
<<<<<<< HEAD
                                                          onClick={[Function]}
=======
                                                          muted={false}
                                                          noVisitedState={false}
                                                          onClick={[Function]}
                                                          textColour={false}
>>>>>>> Footer component (#651)
                                                        >
                                                          Item 2 (Router Link)
                                                        </a>
                                                      </Link>
                                                    </StyledComponent>
<<<<<<< HEAD
                                                  </Styled(LinkDocumented)>
=======
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="2"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
<<<<<<< HEAD
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 3
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 3
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                        </ul>
                                      </StyledComponent>
                                    </styled.ul>
                                  </MetaLinks>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c10",
=======
                                            "lastClassName": "c9",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "margin-bottom: 20px;",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
<<<<<<< HEAD
                                        className="c10"
=======
                                        className="c9"
>>>>>>> Footer component (#651)
                                      >
                                        Built by the 
                                        <FooterLink
                                          href="/"
                                        >
<<<<<<< HEAD
                                          <Styled(LinkDocumented)
                                            href="/"
=======
                                          <Styled(styled.a)
                                            href="/"
                                            muted={false}
                                            noVisitedState={false}
                                            textColour={false}
>>>>>>> Footer component (#651)
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                    "isStatic": true,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
=======
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                      ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                      "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                      "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                      [Function],
                                                      [Function],
                                                      [Function],
>>>>>>> Footer component (#651)
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
<<<<<<< HEAD
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
=======
                                                  "defaultProps": Object {
                                                    "muted": false,
                                                    "noVisitedState": false,
                                                    "textColour": false,
                                                  },
                                                  "displayName": "Styled(styled.a)",
                                                  "foldedComponentIds": Array [
                                                    "sc-htpNat",
                                                  ],
                                                  "propTypes": undefined,
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": "a",
>>>>>>> Footer component (#651)
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/"
<<<<<<< HEAD
                                            >
                                              <LinkDocumented
                                                className="c8"
                                                href="/"
                                                muted={false}
                                                noVisitedState={false}
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c8"
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c8"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c9",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8 c9"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Government Digital Service
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
=======
                                              muted={false}
                                              noVisitedState={false}
                                              textColour={false}
                                            >
                                              <a
                                                className="c8"
                                                href="/"
                                                muted={false}
                                              >
                                                Government Digital Service
                                              </a>
                                            </StyledComponent>
                                          </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                        </FooterLink>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Licence>
                                    <div>
                                      <styled.svg
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <StyledComponent
                                          focusable="false"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c11",
=======
                                                "lastClassName": "c10",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                                ],
                                              },
                                              "displayName": "styled.svg",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
<<<<<<< HEAD
                                            className="c11"
=======
                                            className="c10"
>>>>>>> Footer component (#651)
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c12",
=======
                                                "lastClassName": "c11",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
<<<<<<< HEAD
                                            className="c12"
                                          >
                                            All content is available under the
                                             
                                            <FooterLink
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <Styled(LinkDocumented)
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                rel="license"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": true,
                                                        "lastClassName": "c8",
                                                        "rules": Array [
                                                          ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                        ],
                                                      },
                                                      "displayName": "Styled(LinkDocumented)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  rel="license"
                                                >
                                                  <LinkDocumented
                                                    className="c8"
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <styled.a
                                                      className="c8"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      rel="license"
                                                      textColour={false}
                                                    >
                                                      <StyledComponent
                                                        className="c8"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c9",
                                                              "rules": Array [
                                                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "defaultProps": Object {
                                                              "muted": false,
                                                              "noVisitedState": false,
                                                              "textColour": false,
                                                            },
                                                            "displayName": "styled.a",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": undefined,
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "a",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        rel="license"
                                                        textColour={false}
                                                      >
                                                        <a
                                                          className="c8 c9"
                                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                          muted={false}
                                                          rel="license"
                                                        >
                                                          Open Government Licence v3.0
                                                        </a>
                                                      </StyledComponent>
                                                    </styled.a>
                                                  </LinkDocumented>
                                                </StyledComponent>
                                              </Styled(LinkDocumented)>
                                            </FooterLink>
                                            , except where otherwise stated
=======
                                            className="c11"
                                          >
                                            All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </div>
                                  </Licence>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </MetaContainer>
                  </div>
                </StyledComponent>
              </styled.div>
            </footer>
          </StyledComponent>
        </styled.footer>
      </Footer>
      <Route
        path="/footer-nav-item-2"
        render={[Function]}
      />
      <Route
        path="/footer-meta-item-2"
        render={[Function]}
      />
    </Router>
  </BrowserRouter>
</FooterWithMetaLinksAndCustom>
`;

exports[`Footer matches with meta links snapshot: FooterWithMetaLinks 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.0416666666666667;
  display: block;
  margin-top: 0;
  margin-bottom: 20px;
}

.c4 {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: 0 !important;
  overflow: hidden !important;
  -webkit-clip: rect(0 0 0 0) !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  border: 0 !important;
  white-space: nowrap !important;
  padding: 0 !important;
}

.c6 {
  margin-top: 0;
  margin-bottom: 15px;
  padding: 0;
}

.c7 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 5px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c10 {
=======
  .c9 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 24px;
    line-height: 1.05;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 36px;
    line-height: 1.1111111111111112;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 30px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithMetaLinks>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Footer
        container={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        meta={
          <MetaLinks
            heading="Support links"
          >
            <FooterLink
              href="/"
            >
              Item 1
            </FooterLink>
            <FooterLink
              as={[Function]}
              to="/footer-meta-item-2"
            >
              Item 2 (Router Link)
            </FooterLink>
            <FooterLink
              href="/"
            >
              Item 3
            </FooterLink>
          </MetaLinks>
        }
      >
        <styled.footer
          role="contentinfo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                    [Function],
                  ],
                },
                "displayName": "styled.footer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            role="contentinfo"
          >
            <footer
              className="c0"
              role="contentinfo"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                          [Function],
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <MetaContainer>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <styled.div
                              grow={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                        [Function],
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "grow": false,
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "grow": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={true}
                              >
                                <div
                                  className="c3"
                                >
                                  <MetaLinks
                                    heading="Support links"
                                  >
                                    <styled.span
                                      focusable={false}
                                      important={true}
                                    >
                                      <StyledComponent
                                        focusable={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "c4",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "focusable": false,
                                              "important": true,
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "propTypes": undefined,
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        important={true}
                                      >
                                        <span
                                          className="c4"
                                          focusable={false}
                                        >
                                          <H2>
                                            <Heading
                                              as="h2"
                                              size="LARGE"
                                            >
                                              <styled.h1
                                                as="h2"
                                                size="LARGE"
                                              >
                                                <StyledComponent
                                                  as="h2"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gZMcBi",
                                                        "isStatic": false,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "color: #0b0c0c; @media print {
  color: #000;
}",
                                                          [Function],
                                                          "display: block; margin-top: 0;",
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.h1",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gZMcBi",
                                                      "target": "h1",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  size="LARGE"
                                                >
                                                  <h2
                                                    className="c5"
                                                    size="LARGE"
                                                  >
                                                    Support links
                                                  </h2>
                                                </StyledComponent>
                                              </styled.h1>
                                            </Heading>
                                          </H2>
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                    <styled.ul
                                      inline={true}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "columns": undefined,
                                              "inline": false,
                                            },
                                            "displayName": "styled.ul",
                                            "foldedComponentIds": Array [],
                                            "propTypes": Object {
                                              "columns": [Function],
                                              "inline": [Function],
                                            },
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inline={true}
                                      >
                                        <ul
                                          className="c6"
                                        >
                                          <styled.li
                                            inline={true}
                                            key="0"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
>>>>>>> Footer component (#651)
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
<<<<<<< HEAD
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
=======
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
>>>>>>> Footer component (#651)
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
<<<<<<< HEAD
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 1
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 1
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="1"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  as={[Function]}
                                                  to="/footer-meta-item-2"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    as={[Function]}
=======
                                                  <Styled(styled.a)
                                                    as={[Function]}
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                    to="/footer-meta-item-2"
                                                  >
                                                    <StyledComponent
                                                      as={[Function]}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
<<<<<<< HEAD
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
>>>>>>> Footer component (#651)
                                                      to="/footer-meta-item-2"
                                                    >
                                                      <Link
                                                        className="c8"
<<<<<<< HEAD
=======
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
>>>>>>> Footer component (#651)
                                                        to="/footer-meta-item-2"
                                                      >
                                                        <a
                                                          className="c8"
                                                          href="/footer-meta-item-2"
<<<<<<< HEAD
                                                          onClick={[Function]}
=======
                                                          muted={false}
                                                          noVisitedState={false}
                                                          onClick={[Function]}
                                                          textColour={false}
>>>>>>> Footer component (#651)
                                                        >
                                                          Item 2 (Router Link)
                                                        </a>
                                                      </Link>
                                                    </StyledComponent>
<<<<<<< HEAD
                                                  </Styled(LinkDocumented)>
=======
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="2"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
<<<<<<< HEAD
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 3
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 3
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                        </ul>
                                      </StyledComponent>
                                    </styled.ul>
                                  </MetaLinks>
                                  <Licence>
                                    <div>
                                      <styled.svg
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <StyledComponent
                                          focusable="false"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c10",
=======
                                                "lastClassName": "c9",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                                ],
                                              },
                                              "displayName": "styled.svg",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
<<<<<<< HEAD
                                            className="c10"
=======
                                            className="c9"
>>>>>>> Footer component (#651)
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c11",
=======
                                                "lastClassName": "c10",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
<<<<<<< HEAD
                                            className="c11"
                                          >
                                            All content is available under the
                                             
                                            <FooterLink
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <Styled(LinkDocumented)
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                rel="license"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": true,
                                                        "lastClassName": "c8",
                                                        "rules": Array [
                                                          ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                        ],
                                                      },
                                                      "displayName": "Styled(LinkDocumented)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  rel="license"
                                                >
                                                  <LinkDocumented
                                                    className="c8"
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <styled.a
                                                      className="c8"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      rel="license"
                                                      textColour={false}
                                                    >
                                                      <StyledComponent
                                                        className="c8"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c9",
                                                              "rules": Array [
                                                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "defaultProps": Object {
                                                              "muted": false,
                                                              "noVisitedState": false,
                                                              "textColour": false,
                                                            },
                                                            "displayName": "styled.a",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": undefined,
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "a",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        rel="license"
                                                        textColour={false}
                                                      >
                                                        <a
                                                          className="c8 c9"
                                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                          muted={false}
                                                          rel="license"
                                                        >
                                                          Open Government Licence v3.0
                                                        </a>
                                                      </StyledComponent>
                                                    </styled.a>
                                                  </LinkDocumented>
                                                </StyledComponent>
                                              </Styled(LinkDocumented)>
                                            </FooterLink>
                                            , except where otherwise stated
=======
                                            className="c10"
                                          >
                                            All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </div>
                                  </Licence>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </MetaContainer>
                  </div>
                </StyledComponent>
              </styled.div>
            </footer>
          </StyledComponent>
        </styled.footer>
      </Footer>
      <Route
        path="/footer-nav-item-2"
        render={[Function]}
      />
      <Route
        path="/footer-meta-item-2"
        render={[Function]}
      />
    </Router>
  </BrowserRouter>
</FooterWithMetaLinks>
`;

exports[`Footer matches with navigation and meta snapshot: FooterWithNavigationAndMeta 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  margin: 0;
  border: 0;
  border-bottom: 1px solid #bfc1c3;
  margin-bottom: 30px;
}

<<<<<<< HEAD
.c18 {
  margin-bottom: 20px;
}

.c12 {
=======
.c17 {
  margin-bottom: 20px;
}

.c11 {
>>>>>>> Footer component (#651)
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c13 {
=======
.c12 {
>>>>>>> Footer component (#651)
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c19 {
=======
.c18 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c20 {
  display: inline-block;
}

.c15 {
=======
.c19 {
  display: inline-block;
}

.c14 {
>>>>>>> Footer component (#651)
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.0416666666666667;
  display: block;
  margin-top: 0;
  margin-bottom: 20px;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.1111111111111112;
  display: block;
  margin-top: 0;
  margin-bottom: 15px;
}

<<<<<<< HEAD
.c14 {
=======
.c13 {
>>>>>>> Footer component (#651)
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: 0 !important;
  overflow: hidden !important;
  -webkit-clip: rect(0 0 0 0) !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  border: 0 !important;
  white-space: nowrap !important;
  padding: 0 !important;
}

<<<<<<< HEAD
.c16 {
=======
.c15 {
>>>>>>> Footer component (#651)
  margin-top: 0;
  margin-bottom: 15px;
  padding: 0;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  margin: 0;
  padding: 0;
  list-style: none;
  -webkit-column-gap: 30px;
  column-gap: 30px;
}

.c6 {
  margin: 0;
  padding: 0;
  list-style: none;
  -webkit-column-gap: 30px;
  column-gap: 30px;
}

<<<<<<< HEAD
.c17 {
=======
.c16 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 5px;
}

<<<<<<< HEAD
.c17:last-child {
=======
.c16:last-child {
>>>>>>> Footer component (#651)
  margin-bottom: 0;
}

.c7 {
  margin-bottom: 15px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c3 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 30px;
  margin-left: 15px;
  vertical-align: top;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  -webkit-flex-basis: 200px;
  -ms-flex-preferred-size: 200px;
  flex-basis: 200px;
}

.c4 {
  border-bottom: 1px solid #bfc1c3;
  padding-bottom: 10px;
  margin-top: 0;
  margin-bottom: 25px;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media only screen and (min-width:641px) {
<<<<<<< HEAD
  .c11 {
=======
  .c10 {
>>>>>>> Footer component (#651)
    margin-bottom: 50px;
  }
}

@media print {
<<<<<<< HEAD
  .c12 {
=======
  .c11 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c13 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c12 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c19 {
=======
  .c18 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
<<<<<<< HEAD
  .c15 {
=======
  .c14 {
>>>>>>> Footer component (#651)
    color: #000;
  }
}

@media print {
<<<<<<< HEAD
  .c15 {
=======
  .c14 {
>>>>>>> Footer component (#651)
    font-size: 24px;
    line-height: 1.05;
  }
}

@media only screen and (min-width:641px) {
<<<<<<< HEAD
  .c15 {
=======
  .c14 {
>>>>>>> Footer component (#651)
    font-size: 36px;
    line-height: 1.1111111111111112;
  }
}

@media only screen and (min-width:641px) {
<<<<<<< HEAD
  .c15 {
=======
  .c14 {
>>>>>>> Footer component (#651)
    margin-bottom: 30px;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 18px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 24px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:769px) {
  .c6 {
    -webkit-column-count: 2;
    column-count: 2;
  }
}

@media only screen and (min-width:641px) {
  .c7 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }

  .c3:first-of-type {
    -webkit-box-flex: 2;
    -webkit-flex-grow: 2;
    -ms-flex-positive: 2;
    flex-grow: 2;
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    padding-bottom: 20px;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 40px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithNavigationAndMeta>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Footer
        container={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        meta={
          <React.Fragment>
            <MetaLinks
              heading="Support links"
            >
              <FooterLink
                href="/"
              >
                Item 1
              </FooterLink>
              <FooterLink
                as={[Function]}
                to="/footer-meta-item-2"
              >
                Item 2 (Router Link)
              </FooterLink>
              <FooterLink
                href="/"
              >
                Item 3
              </FooterLink>
            </MetaLinks>
            <ForwardRef>
              Built by the 
              <FooterLink
                href="/"
              >
                Government Digital Service
              </FooterLink>
            </ForwardRef>
          </React.Fragment>
        }
      >
        <styled.footer
          role="contentinfo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                    [Function],
                  ],
                },
                "displayName": "styled.footer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            role="contentinfo"
          >
            <footer
              className="c0"
              role="contentinfo"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                          [Function],
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": true,
                              "lastClassName": "c2",
                              "rules": Array [
                                "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap;",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c2"
                        >
                          <NavigationLinks
                            heading="Two column list"
<<<<<<< HEAD
                            listColumns={2}
=======
                            listColumns="2"
>>>>>>> Footer component (#651)
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "display: inline-block; margin-right: 15px; margin-bottom: 30px; margin-left: 15px; vertical-align: top; flex-grow: 1; flex-shrink: 1; flex-basis: 200px; @media only screen and (min-width: 769px) {
  flex-basis: auto; &:first-of-type {
  flex-grow: 2;
}
}",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c3"
                                >
<<<<<<< HEAD
                                  <Styled(H2)
=======
                                  <Styled(Heading)
>>>>>>> Footer component (#651)
                                    size="MEDIUM"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "border-bottom: 1px solid #bfc1c3; padding-bottom: 10px; margin-top: 0; @media only screen and (min-width: 769px) {
  padding-bottom: 20px;
}",
                                              [Function],
                                            ],
                                          },
<<<<<<< HEAD
                                          "displayName": "Styled(H2)",
=======
                                          "displayName": "Styled(Heading)",
>>>>>>> Footer component (#651)
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      size="MEDIUM"
                                    >
<<<<<<< HEAD
                                      <H2
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <Heading
                                          as="h2"
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <styled.h1
                                            as="h2"
                                            className="c4"
                                            size="MEDIUM"
                                          >
                                            <StyledComponent
                                              as="h2"
                                              className="c4"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-gZMcBi",
                                                    "isStatic": false,
                                                    "lastClassName": "c15",
                                                    "rules": Array [
                                                      "color: #0b0c0c; @media print {
  color: #000;
}",
                                                      [Function],
                                                      "display: block; margin-top: 0;",
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.h1",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-gZMcBi",
                                                  "target": "h1",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="MEDIUM"
                                            >
                                              <h2
                                                className="c4 c5"
                                                size="MEDIUM"
                                              >
                                                Two column list
                                              </h2>
                                            </StyledComponent>
                                          </styled.h1>
                                        </Heading>
                                      </H2>
                                    </StyledComponent>
                                  </Styled(H2)>
                                  <styled.ul
                                    columns={2}
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns={2}
=======
                                      <Heading
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <styled.h1
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <StyledComponent
                                            className="c4"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "c14",
                                                  "rules": Array [
                                                    "color: #0b0c0c; @media print {
  color: #000;
}",
                                                    [Function],
                                                    "display: block; margin-top: 0;",
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.h1",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "h1",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="MEDIUM"
                                          >
                                            <h1
                                              className="c4 c5"
                                              size="MEDIUM"
                                            >
                                              Two column list
                                            </h1>
                                          </StyledComponent>
                                        </styled.h1>
                                      </Heading>
                                    </StyledComponent>
                                  </Styled(Heading)>
                                  <styled.ul
                                    columns="2"
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns="2"
>>>>>>> Footer component (#651)
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
<<<<<<< HEAD
                                            "lastClassName": "c16",
=======
                                            "lastClassName": "c15",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "defaultProps": Object {
                                            "columns": undefined,
                                            "inline": false,
                                          },
                                          "displayName": "styled.ul",
                                          "foldedComponentIds": Array [],
                                          "propTypes": Object {
                                            "columns": [Function],
                                            "inline": [Function],
                                          },
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "ul",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={false}
                                    >
                                      <ul
                                        className="c6"
                                      >
                                        <styled.li
                                          inline={false}
                                          key="0"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 1
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 1
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="1"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                as={[Function]}
                                                to="/footer-nav-item-2"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  as={[Function]}
=======
                                                <Styled(styled.a)
                                                  as={[Function]}
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                  to="/footer-nav-item-2"
                                                >
                                                  <StyledComponent
                                                    as={[Function]}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
<<<<<<< HEAD
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                    to="/footer-nav-item-2"
                                                  >
                                                    <Link
                                                      className="c8"
<<<<<<< HEAD
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
>>>>>>> Footer component (#651)
                                                      to="/footer-nav-item-2"
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/footer-nav-item-2"
<<<<<<< HEAD
                                                        onClick={[Function]}
=======
                                                        muted={false}
                                                        noVisitedState={false}
                                                        onClick={[Function]}
                                                        textColour={false}
>>>>>>> Footer component (#651)
                                                      >
                                                        Navigation item 2 (Router Link)
                                                      </a>
                                                    </Link>
                                                  </StyledComponent>
<<<<<<< HEAD
                                                </Styled(LinkDocumented)>
=======
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="2"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 3
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 3
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="3"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 4
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 4
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="4"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 5
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 5
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="5"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 6
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 6
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                      </ul>
                                    </StyledComponent>
                                  </styled.ul>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </NavigationLinks>
                          <NavigationLinks
                            heading="Single column list"
                            listColumns={0}
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "display: inline-block; margin-right: 15px; margin-bottom: 30px; margin-left: 15px; vertical-align: top; flex-grow: 1; flex-shrink: 1; flex-basis: 200px; @media only screen and (min-width: 769px) {
  flex-basis: auto; &:first-of-type {
  flex-grow: 2;
}
}",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c3"
                                >
<<<<<<< HEAD
                                  <Styled(H2)
=======
                                  <Styled(Heading)
>>>>>>> Footer component (#651)
                                    size="MEDIUM"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "border-bottom: 1px solid #bfc1c3; padding-bottom: 10px; margin-top: 0; @media only screen and (min-width: 769px) {
  padding-bottom: 20px;
}",
                                              [Function],
                                            ],
                                          },
<<<<<<< HEAD
                                          "displayName": "Styled(H2)",
=======
                                          "displayName": "Styled(Heading)",
>>>>>>> Footer component (#651)
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      size="MEDIUM"
                                    >
<<<<<<< HEAD
                                      <H2
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <Heading
                                          as="h2"
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <styled.h1
                                            as="h2"
                                            className="c4"
                                            size="MEDIUM"
                                          >
                                            <StyledComponent
                                              as="h2"
                                              className="c4"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-gZMcBi",
                                                    "isStatic": false,
                                                    "lastClassName": "c15",
                                                    "rules": Array [
                                                      "color: #0b0c0c; @media print {
  color: #000;
}",
                                                      [Function],
                                                      "display: block; margin-top: 0;",
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.h1",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-gZMcBi",
                                                  "target": "h1",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="MEDIUM"
                                            >
                                              <h2
                                                className="c4 c5"
                                                size="MEDIUM"
                                              >
                                                Single column list
                                              </h2>
                                            </StyledComponent>
                                          </styled.h1>
                                        </Heading>
                                      </H2>
                                    </StyledComponent>
                                  </Styled(H2)>
=======
                                      <Heading
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <styled.h1
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <StyledComponent
                                            className="c4"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "c14",
                                                  "rules": Array [
                                                    "color: #0b0c0c; @media print {
  color: #000;
}",
                                                    [Function],
                                                    "display: block; margin-top: 0;",
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.h1",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "h1",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="MEDIUM"
                                          >
                                            <h1
                                              className="c4 c5"
                                              size="MEDIUM"
                                            >
                                              Single column list
                                            </h1>
                                          </StyledComponent>
                                        </styled.h1>
                                      </Heading>
                                    </StyledComponent>
                                  </Styled(Heading)>
>>>>>>> Footer component (#651)
                                  <styled.ul
                                    columns={0}
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns={0}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
<<<<<<< HEAD
                                            "lastClassName": "c16",
=======
                                            "lastClassName": "c15",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "defaultProps": Object {
                                            "columns": undefined,
                                            "inline": false,
                                          },
                                          "displayName": "styled.ul",
                                          "foldedComponentIds": Array [],
                                          "propTypes": Object {
                                            "columns": [Function],
                                            "inline": [Function],
                                          },
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "ul",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={false}
                                    >
                                      <ul
<<<<<<< HEAD
                                        className="c10"
=======
                                        className="c9"
>>>>>>> Footer component (#651)
                                      >
                                        <styled.li
                                          inline={false}
                                          key="0"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 1
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 1
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="1"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 2
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 2
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="2"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
<<<<<<< HEAD
                                                  "lastClassName": "c17",
=======
                                                  "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 3
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 3
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                      </ul>
                                    </StyledComponent>
                                  </styled.ul>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </NavigationLinks>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.hr>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
<<<<<<< HEAD
                              "lastClassName": "c11",
=======
                              "lastClassName": "c10",
>>>>>>> Footer component (#651)
                              "rules": Array [
                                "margin: 0; border: 0; border-bottom: 1px solid #bfc1c3;",
                                [Function],
                              ],
                            },
                            "displayName": "styled.hr",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": "hr",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <hr
<<<<<<< HEAD
                          className="c11"
=======
                          className="c10"
>>>>>>> Footer component (#651)
                        />
                      </StyledComponent>
                    </styled.hr>
                    <MetaContainer>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
<<<<<<< HEAD
                                "lastClassName": "c12",
=======
                                "lastClassName": "c11",
>>>>>>> Footer component (#651)
                                "rules": Array [
                                  "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
<<<<<<< HEAD
                            className="c12"
=======
                            className="c11"
>>>>>>> Footer component (#651)
                          >
                            <styled.div
                              grow={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
<<<<<<< HEAD
                                      "lastClassName": "c13",
=======
                                      "lastClassName": "c12",
>>>>>>> Footer component (#651)
                                      "rules": Array [
                                        "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                        [Function],
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "grow": false,
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "grow": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={true}
                              >
                                <div
<<<<<<< HEAD
                                  className="c13"
=======
                                  className="c12"
>>>>>>> Footer component (#651)
                                >
                                  <MetaLinks
                                    heading="Support links"
                                  >
                                    <styled.span
                                      focusable={false}
                                      important={true}
                                    >
                                      <StyledComponent
                                        focusable={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
<<<<<<< HEAD
                                              "lastClassName": "c14",
=======
                                              "lastClassName": "c13",
>>>>>>> Footer component (#651)
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "focusable": false,
                                              "important": true,
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "propTypes": undefined,
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        important={true}
                                      >
                                        <span
<<<<<<< HEAD
                                          className="c14"
=======
                                          className="c13"
>>>>>>> Footer component (#651)
                                          focusable={false}
                                        >
                                          <H2>
                                            <Heading
                                              as="h2"
                                              size="LARGE"
                                            >
                                              <styled.h1
                                                as="h2"
                                                size="LARGE"
                                              >
                                                <StyledComponent
                                                  as="h2"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gZMcBi",
                                                        "isStatic": false,
<<<<<<< HEAD
                                                        "lastClassName": "c15",
=======
                                                        "lastClassName": "c14",
>>>>>>> Footer component (#651)
                                                        "rules": Array [
                                                          "color: #0b0c0c; @media print {
  color: #000;
}",
                                                          [Function],
                                                          "display: block; margin-top: 0;",
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.h1",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gZMcBi",
                                                      "target": "h1",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  size="LARGE"
                                                >
                                                  <h2
<<<<<<< HEAD
                                                    className="c15"
=======
                                                    className="c14"
>>>>>>> Footer component (#651)
                                                    size="LARGE"
                                                  >
                                                    Support links
                                                  </h2>
                                                </StyledComponent>
                                              </styled.h1>
                                            </Heading>
                                          </H2>
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                    <styled.ul
                                      inline={true}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
<<<<<<< HEAD
                                              "lastClassName": "c16",
=======
                                              "lastClassName": "c15",
>>>>>>> Footer component (#651)
                                              "rules": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "columns": undefined,
                                              "inline": false,
                                            },
                                            "displayName": "styled.ul",
                                            "foldedComponentIds": Array [],
                                            "propTypes": Object {
                                              "columns": [Function],
                                              "inline": [Function],
                                            },
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inline={true}
                                      >
                                        <ul
<<<<<<< HEAD
                                          className="c16"
=======
                                          className="c15"
>>>>>>> Footer component (#651)
                                        >
                                          <styled.li
                                            inline={true}
                                            key="0"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
<<<<<<< HEAD
                                                    "lastClassName": "c17",
=======
                                                    "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
<<<<<<< HEAD
                                                className="c17"
=======
                                                className="c16"
>>>>>>> Footer component (#651)
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
<<<<<<< HEAD
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 1
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 1
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="1"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
<<<<<<< HEAD
                                                    "lastClassName": "c17",
=======
                                                    "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
<<<<<<< HEAD
                                                className="c17"
=======
                                                className="c16"
>>>>>>> Footer component (#651)
                                              >
                                                <FooterLink
                                                  as={[Function]}
                                                  to="/footer-meta-item-2"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    as={[Function]}
=======
                                                  <Styled(styled.a)
                                                    as={[Function]}
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                    to="/footer-meta-item-2"
                                                  >
                                                    <StyledComponent
                                                      as={[Function]}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
<<<<<<< HEAD
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
>>>>>>> Footer component (#651)
                                                      to="/footer-meta-item-2"
                                                    >
                                                      <Link
                                                        className="c8"
<<<<<<< HEAD
=======
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
>>>>>>> Footer component (#651)
                                                        to="/footer-meta-item-2"
                                                      >
                                                        <a
                                                          className="c8"
                                                          href="/footer-meta-item-2"
<<<<<<< HEAD
                                                          onClick={[Function]}
=======
                                                          muted={false}
                                                          noVisitedState={false}
                                                          onClick={[Function]}
                                                          textColour={false}
>>>>>>> Footer component (#651)
                                                        >
                                                          Item 2 (Router Link)
                                                        </a>
                                                      </Link>
                                                    </StyledComponent>
<<<<<<< HEAD
                                                  </Styled(LinkDocumented)>
=======
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                          <styled.li
                                            inline={true}
                                            key="2"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
<<<<<<< HEAD
                                                    "lastClassName": "c17",
=======
                                                    "lastClassName": "c16",
>>>>>>> Footer component (#651)
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
<<<<<<< HEAD
                                                className="c17"
=======
                                                className="c16"
>>>>>>> Footer component (#651)
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
<<<<<<< HEAD
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 3
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 3
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                        </ul>
                                      </StyledComponent>
                                    </styled.ul>
                                  </MetaLinks>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c18",
=======
                                            "lastClassName": "c17",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "margin-bottom: 20px;",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
<<<<<<< HEAD
                                        className="c18"
=======
                                        className="c17"
>>>>>>> Footer component (#651)
                                      >
                                        Built by the 
                                        <FooterLink
                                          href="/"
                                        >
<<<<<<< HEAD
                                          <Styled(LinkDocumented)
                                            href="/"
=======
                                          <Styled(styled.a)
                                            href="/"
                                            muted={false}
                                            noVisitedState={false}
                                            textColour={false}
>>>>>>> Footer component (#651)
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                    "isStatic": true,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/"
                                            >
                                              <LinkDocumented
                                                className="c8"
                                                href="/"
                                                muted={false}
                                                noVisitedState={false}
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c8"
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c8"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c9",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
=======
                                                    "isStatic": false,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                      ":link {
>>>>>>> Footer component (#651)
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
<<<<<<< HEAD
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8 c9"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Government Digital Service
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
=======
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                      "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                      "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "muted": false,
                                                    "noVisitedState": false,
                                                    "textColour": false,
                                                  },
                                                  "displayName": "Styled(styled.a)",
                                                  "foldedComponentIds": Array [
                                                    "sc-htpNat",
                                                  ],
                                                  "propTypes": undefined,
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": "a",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="/"
                                              muted={false}
                                              noVisitedState={false}
                                              textColour={false}
                                            >
                                              <a
                                                className="c8"
                                                href="/"
                                                muted={false}
                                              >
                                                Government Digital Service
                                              </a>
                                            </StyledComponent>
                                          </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                        </FooterLink>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                  <Licence>
                                    <div>
                                      <styled.svg
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <StyledComponent
                                          focusable="false"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c19",
=======
                                                "lastClassName": "c18",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                                ],
                                              },
                                              "displayName": "styled.svg",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
<<<<<<< HEAD
                                            className="c19"
=======
                                            className="c18"
>>>>>>> Footer component (#651)
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c20",
=======
                                                "lastClassName": "c19",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
<<<<<<< HEAD
                                            className="c20"
                                          >
                                            All content is available under the
                                             
                                            <FooterLink
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <Styled(LinkDocumented)
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                rel="license"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": true,
                                                        "lastClassName": "c8",
                                                        "rules": Array [
                                                          ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                        ],
                                                      },
                                                      "displayName": "Styled(LinkDocumented)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  rel="license"
                                                >
                                                  <LinkDocumented
                                                    className="c8"
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <styled.a
                                                      className="c8"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      rel="license"
                                                      textColour={false}
                                                    >
                                                      <StyledComponent
                                                        className="c8"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c9",
                                                              "rules": Array [
                                                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "defaultProps": Object {
                                                              "muted": false,
                                                              "noVisitedState": false,
                                                              "textColour": false,
                                                            },
                                                            "displayName": "styled.a",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": undefined,
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "a",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        rel="license"
                                                        textColour={false}
                                                      >
                                                        <a
                                                          className="c8 c9"
                                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                          muted={false}
                                                          rel="license"
                                                        >
                                                          Open Government Licence v3.0
                                                        </a>
                                                      </StyledComponent>
                                                    </styled.a>
                                                  </LinkDocumented>
                                                </StyledComponent>
                                              </Styled(LinkDocumented)>
                                            </FooterLink>
                                            , except where otherwise stated
=======
                                            className="c19"
                                          >
                                            All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </div>
                                  </Licence>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </MetaContainer>
                  </div>
                </StyledComponent>
              </styled.div>
            </footer>
          </StyledComponent>
        </styled.footer>
      </Footer>
      <Route
        path="/footer-nav-item-2"
        render={[Function]}
      />
      <Route
        path="/footer-meta-item-2"
        render={[Function]}
      />
    </Router>
  </BrowserRouter>
</FooterWithNavigationAndMeta>
`;

exports[`Footer matches with navigation snapshot: FooterWithNavigation 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  margin: 0;
  border: 0;
  border-bottom: 1px solid #bfc1c3;
  margin-bottom: 30px;
}

<<<<<<< HEAD
.c12 {
=======
.c11 {
>>>>>>> Footer component (#651)
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c13 {
=======
.c12 {
>>>>>>> Footer component (#651)
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c14 {
=======
.c13 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c15 {
=======
.c14 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.1111111111111112;
  display: block;
  margin-top: 0;
  margin-bottom: 15px;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  margin: 0;
  padding: 0;
  list-style: none;
  -webkit-column-gap: 30px;
  column-gap: 30px;
}

.c6 {
  margin: 0;
  padding: 0;
  list-style: none;
  -webkit-column-gap: 30px;
  column-gap: 30px;
}

.c7 {
  margin-bottom: 15px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c3 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 30px;
  margin-left: 15px;
  vertical-align: top;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  -webkit-flex-basis: 200px;
  -ms-flex-preferred-size: 200px;
  flex-basis: 200px;
}

.c4 {
  border-bottom: 1px solid #bfc1c3;
  padding-bottom: 10px;
  margin-top: 0;
  margin-bottom: 25px;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media only screen and (min-width:641px) {
<<<<<<< HEAD
  .c11 {
=======
  .c10 {
>>>>>>> Footer component (#651)
    margin-bottom: 50px;
  }
}

@media print {
<<<<<<< HEAD
  .c12 {
=======
  .c11 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c13 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c12 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c14 {
=======
  .c13 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 18px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 24px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:769px) {
  .c6 {
    -webkit-column-count: 2;
    column-count: 2;
  }
}

@media only screen and (min-width:641px) {
  .c7 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }

  .c3:first-of-type {
    -webkit-box-flex: 2;
    -webkit-flex-grow: 2;
    -ms-flex-positive: 2;
    flex-grow: 2;
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    padding-bottom: 20px;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 40px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithNavigation>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Footer
        container={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
      >
        <styled.footer
          role="contentinfo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                    [Function],
                  ],
                },
                "displayName": "styled.footer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            role="contentinfo"
          >
            <footer
              className="c0"
              role="contentinfo"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                          [Function],
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bwzfXH",
                              "isStatic": true,
                              "lastClassName": "c2",
                              "rules": Array [
                                "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap;",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bwzfXH",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="c2"
                        >
                          <NavigationLinks
                            heading="Two column list"
<<<<<<< HEAD
                            listColumns={2}
=======
                            listColumns="2"
>>>>>>> Footer component (#651)
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "display: inline-block; margin-right: 15px; margin-bottom: 30px; margin-left: 15px; vertical-align: top; flex-grow: 1; flex-shrink: 1; flex-basis: 200px; @media only screen and (min-width: 769px) {
  flex-basis: auto; &:first-of-type {
  flex-grow: 2;
}
}",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c3"
                                >
<<<<<<< HEAD
                                  <Styled(H2)
=======
                                  <Styled(Heading)
>>>>>>> Footer component (#651)
                                    size="MEDIUM"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "border-bottom: 1px solid #bfc1c3; padding-bottom: 10px; margin-top: 0; @media only screen and (min-width: 769px) {
  padding-bottom: 20px;
}",
                                              [Function],
                                            ],
                                          },
<<<<<<< HEAD
                                          "displayName": "Styled(H2)",
=======
                                          "displayName": "Styled(Heading)",
>>>>>>> Footer component (#651)
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      size="MEDIUM"
                                    >
<<<<<<< HEAD
                                      <H2
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <Heading
                                          as="h2"
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <styled.h1
                                            as="h2"
                                            className="c4"
                                            size="MEDIUM"
                                          >
                                            <StyledComponent
                                              as="h2"
                                              className="c4"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-gZMcBi",
                                                    "isStatic": false,
                                                    "lastClassName": "c5",
                                                    "rules": Array [
                                                      "color: #0b0c0c; @media print {
  color: #000;
}",
                                                      [Function],
                                                      "display: block; margin-top: 0;",
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.h1",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-gZMcBi",
                                                  "target": "h1",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="MEDIUM"
                                            >
                                              <h2
                                                className="c4 c5"
                                                size="MEDIUM"
                                              >
                                                Two column list
                                              </h2>
                                            </StyledComponent>
                                          </styled.h1>
                                        </Heading>
                                      </H2>
                                    </StyledComponent>
                                  </Styled(H2)>
                                  <styled.ul
                                    columns={2}
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns={2}
=======
                                      <Heading
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <styled.h1
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <StyledComponent
                                            className="c4"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "color: #0b0c0c; @media print {
  color: #000;
}",
                                                    [Function],
                                                    "display: block; margin-top: 0;",
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.h1",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "h1",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="MEDIUM"
                                          >
                                            <h1
                                              className="c4 c5"
                                              size="MEDIUM"
                                            >
                                              Two column list
                                            </h1>
                                          </StyledComponent>
                                        </styled.h1>
                                      </Heading>
                                    </StyledComponent>
                                  </Styled(Heading)>
                                  <styled.ul
                                    columns="2"
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns="2"
>>>>>>> Footer component (#651)
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
<<<<<<< HEAD
                                            "lastClassName": "c10",
=======
                                            "lastClassName": "c9",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "defaultProps": Object {
                                            "columns": undefined,
                                            "inline": false,
                                          },
                                          "displayName": "styled.ul",
                                          "foldedComponentIds": Array [],
                                          "propTypes": Object {
                                            "columns": [Function],
                                            "inline": [Function],
                                          },
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "ul",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={false}
                                    >
                                      <ul
                                        className="c6"
                                      >
                                        <styled.li
                                          inline={false}
                                          key="0"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
>>>>>>> Footer component (#651)
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
<<<<<<< HEAD
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
=======
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
>>>>>>> Footer component (#651)
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
<<<<<<< HEAD
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 1
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 1
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="1"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                as={[Function]}
                                                to="/footer-nav-item-2"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  as={[Function]}
=======
                                                <Styled(styled.a)
                                                  as={[Function]}
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                  to="/footer-nav-item-2"
                                                >
                                                  <StyledComponent
                                                    as={[Function]}
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
<<<<<<< HEAD
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                    to="/footer-nav-item-2"
                                                  >
                                                    <Link
                                                      className="c8"
<<<<<<< HEAD
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
>>>>>>> Footer component (#651)
                                                      to="/footer-nav-item-2"
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/footer-nav-item-2"
<<<<<<< HEAD
                                                        onClick={[Function]}
=======
                                                        muted={false}
                                                        noVisitedState={false}
                                                        onClick={[Function]}
                                                        textColour={false}
>>>>>>> Footer component (#651)
                                                      >
                                                        Navigation item 2 (Router Link)
                                                      </a>
                                                    </Link>
                                                  </StyledComponent>
<<<<<<< HEAD
                                                </Styled(LinkDocumented)>
=======
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="2"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 3
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 3
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="3"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 4
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 4
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="4"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 5
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 5
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="5"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 6
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 6
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                      </ul>
                                    </StyledComponent>
                                  </styled.ul>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </NavigationLinks>
                          <NavigationLinks
                            heading="Single column list"
                            listColumns={0}
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-fjdhpX",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "display: inline-block; margin-right: 15px; margin-bottom: 30px; margin-left: 15px; vertical-align: top; flex-grow: 1; flex-shrink: 1; flex-basis: 200px; @media only screen and (min-width: 769px) {
  flex-basis: auto; &:first-of-type {
  flex-grow: 2;
}
}",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-fjdhpX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c3"
                                >
<<<<<<< HEAD
                                  <Styled(H2)
=======
                                  <Styled(Heading)
>>>>>>> Footer component (#651)
                                    size="MEDIUM"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-jzJRlG",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "border-bottom: 1px solid #bfc1c3; padding-bottom: 10px; margin-top: 0; @media only screen and (min-width: 769px) {
  padding-bottom: 20px;
}",
                                              [Function],
                                            ],
                                          },
<<<<<<< HEAD
                                          "displayName": "Styled(H2)",
=======
                                          "displayName": "Styled(Heading)",
>>>>>>> Footer component (#651)
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-jzJRlG",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      size="MEDIUM"
                                    >
<<<<<<< HEAD
                                      <H2
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <Heading
                                          as="h2"
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <styled.h1
                                            as="h2"
                                            className="c4"
                                            size="MEDIUM"
                                          >
                                            <StyledComponent
                                              as="h2"
                                              className="c4"
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-gZMcBi",
                                                    "isStatic": false,
                                                    "lastClassName": "c5",
                                                    "rules": Array [
                                                      "color: #0b0c0c; @media print {
  color: #000;
}",
                                                      [Function],
                                                      "display: block; margin-top: 0;",
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.h1",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-gZMcBi",
                                                  "target": "h1",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="MEDIUM"
                                            >
                                              <h2
                                                className="c4 c5"
                                                size="MEDIUM"
                                              >
                                                Single column list
                                              </h2>
                                            </StyledComponent>
                                          </styled.h1>
                                        </Heading>
                                      </H2>
                                    </StyledComponent>
                                  </Styled(H2)>
=======
                                      <Heading
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <styled.h1
                                          className="c4"
                                          size="MEDIUM"
                                        >
                                          <StyledComponent
                                            className="c4"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "color: #0b0c0c; @media print {
  color: #000;
}",
                                                    [Function],
                                                    "display: block; margin-top: 0;",
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.h1",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "h1",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="MEDIUM"
                                          >
                                            <h1
                                              className="c4 c5"
                                              size="MEDIUM"
                                            >
                                              Single column list
                                            </h1>
                                          </StyledComponent>
                                        </styled.h1>
                                      </Heading>
                                    </StyledComponent>
                                  </Styled(Heading)>
>>>>>>> Footer component (#651)
                                  <styled.ul
                                    columns={0}
                                    inline={false}
                                  >
                                    <StyledComponent
                                      columns={0}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-VigVT",
                                            "isStatic": false,
<<<<<<< HEAD
                                            "lastClassName": "c10",
=======
                                            "lastClassName": "c9",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "defaultProps": Object {
                                            "columns": undefined,
                                            "inline": false,
                                          },
                                          "displayName": "styled.ul",
                                          "foldedComponentIds": Array [],
                                          "propTypes": Object {
                                            "columns": [Function],
                                            "inline": [Function],
                                          },
                                          "render": [Function],
                                          "styledComponentId": "sc-VigVT",
                                          "target": "ul",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={false}
                                    >
                                      <ul
<<<<<<< HEAD
                                        className="c10"
=======
                                        className="c9"
>>>>>>> Footer component (#651)
                                      >
                                        <styled.li
                                          inline={false}
                                          key="0"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 1
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 1
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="1"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 2
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 2
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                        <styled.li
                                          inline={false}
                                          key="2"
                                        >
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-jTzLTM",
                                                  "isStatic": false,
                                                  "lastClassName": "c7",
                                                  "rules": Array [
                                                    [Function],
                                                    "&:last-child {
  margin-bottom: 0;
}",
                                                  ],
                                                },
                                                "defaultProps": Object {
                                                  "inline": false,
                                                },
                                                "displayName": "styled.li",
                                                "foldedComponentIds": Array [],
                                                "propTypes": Object {
                                                  "inline": [Function],
                                                },
                                                "render": [Function],
                                                "styledComponentId": "sc-jTzLTM",
                                                "target": "li",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={false}
                                          >
                                            <li
                                              className="c7"
                                            >
                                              <FooterLink
                                                href="/"
                                              >
<<<<<<< HEAD
                                                <Styled(LinkDocumented)
                                                  href="/"
=======
                                                <Styled(styled.a)
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
>>>>>>> Footer component (#651)
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                          "isStatic": true,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
=======
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
>>>>>>> Footer component (#651)
                                                            ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                          ],
                                                        },
<<<<<<< HEAD
                                                        "displayName": "Styled(LinkDocumented)",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": [Function],
=======
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "Styled(styled.a)",
                                                        "foldedComponentIds": Array [
                                                          "sc-htpNat",
                                                        ],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bxivhb",
                                                        "target": "a",
>>>>>>> Footer component (#651)
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="/"
<<<<<<< HEAD
                                                  >
                                                    <LinkDocumented
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <styled.a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <StyledComponent
                                                          className="c8"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c9",
                                                                "rules": Array [
                                                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                  ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                  "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                  "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "defaultProps": Object {
                                                                "muted": false,
                                                                "noVisitedState": false,
                                                                "textColour": false,
                                                              },
                                                              "displayName": "styled.a",
                                                              "foldedComponentIds": Array [],
                                                              "propTypes": undefined,
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "a",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <a
                                                            className="c8 c9"
                                                            href="/"
                                                            muted={false}
                                                          >
                                                            Navigation item 3
                                                          </a>
                                                        </StyledComponent>
                                                      </styled.a>
                                                    </LinkDocumented>
                                                  </StyledComponent>
                                                </Styled(LinkDocumented)>
=======
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8"
                                                      href="/"
                                                      muted={false}
                                                    >
                                                      Navigation item 3
                                                    </a>
                                                  </StyledComponent>
                                                </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                              </FooterLink>
                                            </li>
                                          </StyledComponent>
                                        </styled.li>
                                      </ul>
                                    </StyledComponent>
                                  </styled.ul>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </NavigationLinks>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.hr>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-ifAKCX",
                              "isStatic": false,
<<<<<<< HEAD
                              "lastClassName": "c11",
=======
                              "lastClassName": "c10",
>>>>>>> Footer component (#651)
                              "rules": Array [
                                "margin: 0; border: 0; border-bottom: 1px solid #bfc1c3;",
                                [Function],
                              ],
                            },
                            "displayName": "styled.hr",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-ifAKCX",
                            "target": "hr",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <hr
<<<<<<< HEAD
                          className="c11"
=======
                          className="c10"
>>>>>>> Footer component (#651)
                        />
                      </StyledComponent>
                    </styled.hr>
                    <MetaContainer>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
<<<<<<< HEAD
                                "lastClassName": "c12",
=======
                                "lastClassName": "c11",
>>>>>>> Footer component (#651)
                                "rules": Array [
                                  "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
<<<<<<< HEAD
                            className="c12"
=======
                            className="c11"
>>>>>>> Footer component (#651)
                          >
                            <styled.div
                              grow={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
<<<<<<< HEAD
                                      "lastClassName": "c13",
=======
                                      "lastClassName": "c12",
>>>>>>> Footer component (#651)
                                      "rules": Array [
                                        "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                        [Function],
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "grow": false,
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "grow": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={true}
                              >
                                <div
<<<<<<< HEAD
                                  className="c13"
=======
                                  className="c12"
>>>>>>> Footer component (#651)
                                >
                                  <Licence>
                                    <div>
                                      <styled.svg
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <StyledComponent
                                          focusable="false"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c14",
=======
                                                "lastClassName": "c13",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                                ],
                                              },
                                              "displayName": "styled.svg",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
<<<<<<< HEAD
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
                                            className="c14"
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
                                                "lastClassName": "c15",
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
                                            className="c15"
                                          >
                                            All content is available under the
                                             
                                            <FooterLink
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <Styled(LinkDocumented)
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                rel="license"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": true,
                                                        "lastClassName": "c8",
                                                        "rules": Array [
                                                          ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                        ],
                                                      },
                                                      "displayName": "Styled(LinkDocumented)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  rel="license"
                                                >
                                                  <LinkDocumented
                                                    className="c8"
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <styled.a
                                                      className="c8"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      rel="license"
                                                      textColour={false}
                                                    >
                                                      <StyledComponent
                                                        className="c8"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c9",
                                                              "rules": Array [
                                                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "defaultProps": Object {
                                                              "muted": false,
                                                              "noVisitedState": false,
                                                              "textColour": false,
                                                            },
                                                            "displayName": "styled.a",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": undefined,
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "a",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        rel="license"
                                                        textColour={false}
                                                      >
                                                        <a
                                                          className="c8 c9"
                                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                          muted={false}
                                                          rel="license"
                                                        >
                                                          Open Government Licence v3.0
                                                        </a>
                                                      </StyledComponent>
                                                    </styled.a>
                                                  </LinkDocumented>
                                                </StyledComponent>
                                              </Styled(LinkDocumented)>
                                            </FooterLink>
                                            , except where otherwise stated
=======
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
                                            className="c13"
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
                                                "lastClassName": "c14",
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
                                            className="c14"
                                          >
                                            All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </div>
                                  </Licence>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </MetaContainer>
                  </div>
                </StyledComponent>
              </styled.div>
            </footer>
          </StyledComponent>
        </styled.footer>
      </Footer>
      <Route
        path="/footer-nav-item-2"
        render={[Function]}
      />
      <Route
        path="/footer-meta-item-2"
        render={[Function]}
      />
    </Router>
  </BrowserRouter>
</FooterWithNavigation>
`;

exports[`Footer matches with single meta link snapshot: FooterWithSingleMetaLink 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c3 {
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.0416666666666667;
  display: block;
  margin-top: 0;
  margin-bottom: 20px;
}

.c4 {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: 0 !important;
  overflow: hidden !important;
  -webkit-clip: rect(0 0 0 0) !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important;
  border: 0 !important;
  white-space: nowrap !important;
  padding: 0 !important;
}

.c6 {
  margin-top: 0;
  margin-bottom: 15px;
  padding: 0;
}

.c7 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 5px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c2 {
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c10 {
=======
  .c9 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 24px;
    line-height: 1.05;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 36px;
    line-height: 1.1111111111111112;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 30px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithSingleMetaLink>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Footer
        container={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        meta={
          <MetaLinks
            heading="Support links"
          >
            <FooterLink
              href="/"
            >
              Item 1
            </FooterLink>
          </MetaLinks>
        }
      >
        <styled.footer
          role="contentinfo"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-cSHVUG",
                  "isStatic": false,
                  "lastClassName": "c0",
                  "rules": Array [
                    "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                    [Function],
                  ],
                },
                "displayName": "styled.footer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-cSHVUG",
                "target": "footer",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            role="contentinfo"
          >
            <footer
              className="c0"
              role="contentinfo"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "c1",
                        "rules": Array [
                          "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                          [Function],
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c1"
                  >
                    <MetaContainer>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <styled.div
                              grow={true}
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gzVnrw",
                                      "isStatic": false,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                        [Function],
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "grow": false,
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "grow": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-gzVnrw",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                grow={true}
                              >
                                <div
                                  className="c3"
                                >
                                  <MetaLinks
                                    heading="Support links"
                                  >
                                    <styled.span
                                      focusable={false}
                                      important={true}
                                    >
                                      <StyledComponent
                                        focusable={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gqjmRU",
                                              "isStatic": false,
                                              "lastClassName": "c4",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "focusable": false,
                                              "important": true,
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "propTypes": undefined,
                                            "render": [Function],
                                            "styledComponentId": "sc-gqjmRU",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        important={true}
                                      >
                                        <span
                                          className="c4"
                                          focusable={false}
                                        >
                                          <H2>
                                            <Heading
                                              as="h2"
                                              size="LARGE"
                                            >
                                              <styled.h1
                                                as="h2"
                                                size="LARGE"
                                              >
                                                <StyledComponent
                                                  as="h2"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-gZMcBi",
                                                        "isStatic": false,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "color: #0b0c0c; @media print {
  color: #000;
}",
                                                          [Function],
                                                          "display: block; margin-top: 0;",
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.h1",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-gZMcBi",
                                                      "target": "h1",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  size="LARGE"
                                                >
                                                  <h2
                                                    className="c5"
                                                    size="LARGE"
                                                  >
                                                    Support links
                                                  </h2>
                                                </StyledComponent>
                                              </styled.h1>
                                            </Heading>
                                          </H2>
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                    <styled.ul
                                      inline={true}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-VigVT",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "columns": undefined,
                                              "inline": false,
                                            },
                                            "displayName": "styled.ul",
                                            "foldedComponentIds": Array [],
                                            "propTypes": Object {
                                              "columns": [Function],
                                              "inline": [Function],
                                            },
                                            "render": [Function],
                                            "styledComponentId": "sc-VigVT",
                                            "target": "ul",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inline={true}
                                      >
                                        <ul
                                          className="c6"
                                        >
                                          <styled.li
                                            inline={true}
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-jTzLTM",
                                                    "isStatic": false,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      [Function],
                                                      "&:last-child {
  margin-bottom: 0;
}",
                                                    ],
                                                  },
                                                  "defaultProps": Object {
                                                    "inline": false,
                                                  },
                                                  "displayName": "styled.li",
                                                  "foldedComponentIds": Array [],
                                                  "propTypes": Object {
                                                    "inline": [Function],
                                                  },
                                                  "render": [Function],
                                                  "styledComponentId": "sc-jTzLTM",
                                                  "target": "li",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                            >
                                              <li
                                                className="c7"
                                              >
                                                <FooterLink
                                                  href="/"
                                                >
<<<<<<< HEAD
                                                  <Styled(LinkDocumented)
                                                    href="/"
=======
                                                  <Styled(styled.a)
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
>>>>>>> Footer component (#651)
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                            "isStatic": true,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
=======
                                                            "isStatic": false,
                                                            "lastClassName": "c8",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
>>>>>>> Footer component (#651)
                                                              ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                            ],
                                                          },
<<<<<<< HEAD
                                                          "displayName": "Styled(LinkDocumented)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": [Function],
=======
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "Styled(styled.a)",
                                                          "foldedComponentIds": Array [
                                                            "sc-htpNat",
                                                          ],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bxivhb",
                                                          "target": "a",
>>>>>>> Footer component (#651)
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
<<<<<<< HEAD
                                                    >
                                                      <LinkDocumented
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        textColour={false}
                                                      >
                                                        <styled.a
                                                          className="c8"
                                                          href="/"
                                                          muted={false}
                                                          noVisitedState={false}
                                                          textColour={false}
                                                        >
                                                          <StyledComponent
                                                            className="c8"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-htpNat",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c9",
                                                                  "rules": Array [
                                                                    "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                    ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                    "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                    "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "defaultProps": Object {
                                                                  "muted": false,
                                                                  "noVisitedState": false,
                                                                  "textColour": false,
                                                                },
                                                                "displayName": "styled.a",
                                                                "foldedComponentIds": Array [],
                                                                "propTypes": undefined,
                                                                "render": [Function],
                                                                "styledComponentId": "sc-htpNat",
                                                                "target": "a",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            href="/"
                                                            muted={false}
                                                            noVisitedState={false}
                                                            textColour={false}
                                                          >
                                                            <a
                                                              className="c8 c9"
                                                              href="/"
                                                              muted={false}
                                                            >
                                                              Item 1
                                                            </a>
                                                          </StyledComponent>
                                                        </styled.a>
                                                      </LinkDocumented>
                                                    </StyledComponent>
                                                  </Styled(LinkDocumented)>
=======
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Item 1
                                                      </a>
                                                    </StyledComponent>
                                                  </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                                </FooterLink>
                                              </li>
                                            </StyledComponent>
                                          </styled.li>
                                        </ul>
                                      </StyledComponent>
                                    </styled.ul>
                                  </MetaLinks>
                                  <Licence>
                                    <div>
                                      <styled.svg
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <StyledComponent
                                          focusable="false"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htoDjs",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c10",
=======
                                                "lastClassName": "c9",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                                ],
                                              },
                                              "displayName": "styled.svg",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htoDjs",
                                              "target": "svg",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          height="17"
                                          role="presentation"
                                          viewBox="0 0 483.2 195.7"
                                          width="41"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <svg
<<<<<<< HEAD
                                            className="c10"
=======
                                            className="c9"
>>>>>>> Footer component (#651)
                                            focusable="false"
                                            height="17"
                                            role="presentation"
                                            viewBox="0 0 483.2 195.7"
                                            width="41"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </StyledComponent>
                                      </styled.svg>
                                      <styled.span>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-dnqmqq",
                                                "isStatic": true,
<<<<<<< HEAD
                                                "lastClassName": "c11",
=======
                                                "lastClassName": "c10",
>>>>>>> Footer component (#651)
                                                "rules": Array [
                                                  "display: inline-block;",
                                                ],
                                              },
                                              "displayName": "styled.span",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-dnqmqq",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <span
<<<<<<< HEAD
                                            className="c11"
                                          >
                                            All content is available under the
                                             
                                            <FooterLink
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <Styled(LinkDocumented)
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                rel="license"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bxivhb",
                                                        "isStatic": true,
                                                        "lastClassName": "c8",
                                                        "rules": Array [
                                                          ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                        ],
                                                      },
                                                      "displayName": "Styled(LinkDocumented)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bxivhb",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  rel="license"
                                                >
                                                  <LinkDocumented
                                                    className="c8"
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <styled.a
                                                      className="c8"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      rel="license"
                                                      textColour={false}
                                                    >
                                                      <StyledComponent
                                                        className="c8"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c9",
                                                              "rules": Array [
                                                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                                ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                                "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                                "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "defaultProps": Object {
                                                              "muted": false,
                                                              "noVisitedState": false,
                                                              "textColour": false,
                                                            },
                                                            "displayName": "styled.a",
                                                            "foldedComponentIds": Array [],
                                                            "propTypes": undefined,
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "a",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                        muted={false}
                                                        noVisitedState={false}
                                                        rel="license"
                                                        textColour={false}
                                                      >
                                                        <a
                                                          className="c8 c9"
                                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                          muted={false}
                                                          rel="license"
                                                        >
                                                          Open Government Licence v3.0
                                                        </a>
                                                      </StyledComponent>
                                                    </styled.a>
                                                  </LinkDocumented>
                                                </StyledComponent>
                                              </Styled(LinkDocumented)>
                                            </FooterLink>
                                            , except where otherwise stated
=======
                                            className="c10"
                                          >
                                            All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                          </span>
                                        </StyledComponent>
                                      </styled.span>
                                    </div>
                                  </Licence>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </MetaContainer>
                  </div>
                </StyledComponent>
              </styled.div>
            </footer>
          </StyledComponent>
        </styled.footer>
      </Footer>
      <Route
        path="/footer-nav-item-2"
        render={[Function]}
      />
      <Route
        path="/footer-meta-item-2"
        render={[Function]}
      />
    </Router>
  </BrowserRouter>
</FooterWithSingleMetaLink>
`;

exports[`Footer matches with single navigation link snapshot: FooterWithSingleNavigationLink 1`] = `
.c1 {
  max-width: 960px;
  margin: 0 15px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<<<<<<< HEAD
.c9 {
=======
.c8 {
>>>>>>> Footer component (#651)
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c9:link {
  color: #005ea5;
}

.c9:visited {
  color: #4c2c92;
}

.c9:hover {
  color: #2b8cc4;
}

.c9:active {
  color: #2b8cc4;
}

.c9:focus {
  color: #0b0c0c;
}

.c9:focus {
=======
.c8:link {
  color: #005ea5;
}

.c8:visited {
  color: #4c2c92;
}

.c8:hover {
  color: #2b8cc4;
}

.c8:active {
  color: #2b8cc4;
}

.c8:focus {
  color: #0b0c0c;
}

.c8:focus {
>>>>>>> Footer component (#651)
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c8:link,
.c8:visited {
  color: #454a4c;
}

.c8:hover {
  color: #171819;
}

<<<<<<< HEAD
.c10 {
=======
.c9 {
>>>>>>> Footer component (#651)
  margin: 0;
  border: 0;
  border-bottom: 1px solid #bfc1c3;
  margin-bottom: 30px;
}

<<<<<<< HEAD
.c11 {
=======
.c10 {
>>>>>>> Footer component (#651)
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

<<<<<<< HEAD
.c12 {
=======
.c11 {
>>>>>>> Footer component (#651)
  margin-right: 15px;
  margin-bottom: 25px;
  margin-left: 15px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-basis: 320px;
  -ms-flex-preferred-size: 320px;
  flex-basis: 320px;
}

<<<<<<< HEAD
.c13 {
=======
.c12 {
>>>>>>> Footer component (#651)
  display: inline-block;
  margin-right: 10px;
  margin-bottom: 15px;
  vertical-align: top;
}

<<<<<<< HEAD
.c14 {
=======
.c13 {
>>>>>>> Footer component (#651)
  display: inline-block;
}

.c5 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.1111111111111112;
  display: block;
  margin-top: 0;
  margin-bottom: 15px;
}

.c6 {
  margin: 0;
  padding: 0;
  list-style: none;
  -webkit-column-gap: 30px;
  column-gap: 30px;
}

.c7 {
  margin-bottom: 15px;
}

.c7:last-child {
  margin-bottom: 0;
}

.c3 {
  display: inline-block;
  margin-right: 15px;
  margin-bottom: 30px;
  margin-left: 15px;
  vertical-align: top;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  -webkit-flex-basis: 200px;
  -ms-flex-preferred-size: 200px;
  flex-basis: 200px;
}

.c4 {
  border-bottom: 1px solid #bfc1c3;
  padding-bottom: 10px;
  margin-top: 0;
  margin-bottom: 25px;
}

.c0 {
  border-top: 1px solid #a1acb2;
  background: #dee0e2;
  color: #454a4c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.1428571428571428;
  padding-top: 25px;
  padding-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c1 {
    margin: 0 30px;
  }
}

@media only screen and (min-width:1020px) {
  .c1 {
    margin: 0 auto;
  }
}

@media print {
<<<<<<< HEAD
  .c9 {
=======
  .c8 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

@media print {
<<<<<<< HEAD
  .c9[href^="/"]::after,
  .c9[href^="http://"]::after,
  .c9[href^="https://"]::after {
=======
  .c8[href^="/"]::after,
  .c8[href^="http://"]::after,
  .c8[href^="https://"]::after {
>>>>>>> Footer component (#651)
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media only screen and (min-width:641px) {
<<<<<<< HEAD
  .c10 {
=======
  .c9 {
>>>>>>> Footer component (#651)
    margin-bottom: 50px;
  }
}

@media print {
<<<<<<< HEAD
  .c11 {
=======
  .c10 {
>>>>>>> Footer component (#651)
    font-family: sans-serif;
  }
}

<<<<<<< HEAD
@media only screen and (min-width:769px) {
  .c12 {
    -webkit-flex-basis: 0;
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
=======
@media only screen and (min-width:641px) {
  .c11 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
>>>>>>> Footer component (#651)
  }
}

@media only screen and (min-width:769px) {
<<<<<<< HEAD
  .c13 {
=======
  .c12 {
>>>>>>> Footer component (#651)
    margin-bottom: 0;
  }
}

@media print {
  .c5 {
    color: #000;
  }
}

@media print {
  .c5 {
    font-size: 18px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    font-size: 24px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c5 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:641px) {
  .c7 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:769px) {
  .c3 {
    -webkit-flex-basis: auto;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }

  .c3:first-of-type {
    -webkit-box-flex: 2;
    -webkit-flex-grow: 2;
    -ms-flex-positive: 2;
    flex-grow: 2;
  }
}

@media only screen and (min-width:769px) {
  .c4 {
    padding-bottom: 20px;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 40px;
  }
}

@media print {
  .c0 {
    font-size: 14px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-top: 40px;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    padding-bottom: 25px;
  }
}

<FooterWithSingleNavigationLink>
  <Footer
    container={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "c1",
          "rules": Array [
            "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
            [Function],
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
  >
    <styled.footer
      role="contentinfo"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-cSHVUG",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "border-top: 1px solid #a1acb2; background: #dee0e2; color: #454a4c;",
                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.2;
} font-weight: 400; font-size: 14px; line-height: 1.1428571428571428; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
}",
                [Function],
              ],
            },
            "displayName": "styled.footer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-cSHVUG",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        role="contentinfo"
      >
        <footer
          className="c0"
          role="contentinfo"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "max-width: 960px; margin: 0 15px; @media only screen and (min-width: 641px) {
  margin: 0 30px;
} @media only screen and (min-width: 1020px) {
  margin: 0 auto;
}",
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap;",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <NavigationLinks
                        heading="Single column list"
                        listColumns={0}
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-fjdhpX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "display: inline-block; margin-right: 15px; margin-bottom: 30px; margin-left: 15px; vertical-align: top; flex-grow: 1; flex-shrink: 1; flex-basis: 200px; @media only screen and (min-width: 769px) {
  flex-basis: auto; &:first-of-type {
  flex-grow: 2;
}
}",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-fjdhpX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
<<<<<<< HEAD
                              <Styled(H2)
=======
                              <Styled(Heading)
>>>>>>> Footer component (#651)
                                size="MEDIUM"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-jzJRlG",
                                        "isStatic": false,
                                        "lastClassName": "c4",
                                        "rules": Array [
                                          "border-bottom: 1px solid #bfc1c3; padding-bottom: 10px; margin-top: 0; @media only screen and (min-width: 769px) {
  padding-bottom: 20px;
}",
                                          [Function],
                                        ],
                                      },
<<<<<<< HEAD
                                      "displayName": "Styled(H2)",
=======
                                      "displayName": "Styled(Heading)",
>>>>>>> Footer component (#651)
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-jzJRlG",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  size="MEDIUM"
                                >
<<<<<<< HEAD
                                  <H2
                                    className="c4"
                                    size="MEDIUM"
                                  >
                                    <Heading
                                      as="h2"
                                      className="c4"
                                      size="MEDIUM"
                                    >
                                      <styled.h1
                                        as="h2"
                                        className="c4"
                                        size="MEDIUM"
                                      >
                                        <StyledComponent
                                          as="h2"
                                          className="c4"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-gZMcBi",
                                                "isStatic": false,
                                                "lastClassName": "c5",
                                                "rules": Array [
                                                  "color: #0b0c0c; @media print {
  color: #000;
}",
                                                  [Function],
                                                  "display: block; margin-top: 0;",
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "styled.h1",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-gZMcBi",
                                              "target": "h1",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          size="MEDIUM"
                                        >
                                          <h2
                                            className="c4 c5"
                                            size="MEDIUM"
                                          >
                                            Single column list
                                          </h2>
                                        </StyledComponent>
                                      </styled.h1>
                                    </Heading>
                                  </H2>
                                </StyledComponent>
                              </Styled(H2)>
=======
                                  <Heading
                                    className="c4"
                                    size="MEDIUM"
                                  >
                                    <styled.h1
                                      className="c4"
                                      size="MEDIUM"
                                    >
                                      <StyledComponent
                                        className="c4"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gZMcBi",
                                              "isStatic": false,
                                              "lastClassName": "c5",
                                              "rules": Array [
                                                "color: #0b0c0c; @media print {
  color: #000;
}",
                                                [Function],
                                                "display: block; margin-top: 0;",
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "displayName": "styled.h1",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gZMcBi",
                                            "target": "h1",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        size="MEDIUM"
                                      >
                                        <h1
                                          className="c4 c5"
                                          size="MEDIUM"
                                        >
                                          Single column list
                                        </h1>
                                      </StyledComponent>
                                    </styled.h1>
                                  </Heading>
                                </StyledComponent>
                              </Styled(Heading)>
>>>>>>> Footer component (#651)
                              <styled.ul
                                columns={0}
                                inline={false}
                              >
                                <StyledComponent
                                  columns={0}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-VigVT",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "defaultProps": Object {
                                        "columns": undefined,
                                        "inline": false,
                                      },
                                      "displayName": "styled.ul",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "columns": [Function],
                                        "inline": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-VigVT",
                                      "target": "ul",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  inline={false}
                                >
                                  <ul
                                    className="c6"
                                  >
                                    <styled.li
                                      inline={false}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-jTzLTM",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                [Function],
                                                "&:last-child {
  margin-bottom: 0;
}",
                                              ],
                                            },
                                            "defaultProps": Object {
                                              "inline": false,
                                            },
                                            "displayName": "styled.li",
                                            "foldedComponentIds": Array [],
                                            "propTypes": Object {
                                              "inline": [Function],
                                            },
                                            "render": [Function],
                                            "styledComponentId": "sc-jTzLTM",
                                            "target": "li",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        inline={false}
                                      >
                                        <li
                                          className="c7"
                                        >
                                          <FooterLink
                                            href="/"
                                          >
<<<<<<< HEAD
                                            <Styled(LinkDocumented)
                                              href="/"
=======
                                            <Styled(styled.a)
                                              href="/"
                                              muted={false}
                                              noVisitedState={false}
                                              textColour={false}
>>>>>>> Footer component (#651)
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
<<<<<<< HEAD
                                                      "isStatic": true,
                                                      "lastClassName": "c8",
                                                      "rules": Array [
=======
                                                      "isStatic": false,
                                                      "lastClassName": "c8",
                                                      "rules": Array [
                                                        "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                        ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                        "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                        "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                        [Function],
                                                        [Function],
                                                        [Function],
>>>>>>> Footer component (#651)
                                                        ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                      ],
                                                    },
<<<<<<< HEAD
                                                    "displayName": "Styled(LinkDocumented)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": [Function],
=======
                                                    "defaultProps": Object {
                                                      "muted": false,
                                                      "noVisitedState": false,
                                                      "textColour": false,
                                                    },
                                                    "displayName": "Styled(styled.a)",
                                                    "foldedComponentIds": Array [
                                                      "sc-htpNat",
                                                    ],
                                                    "propTypes": undefined,
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "a",
>>>>>>> Footer component (#651)
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                href="/"
<<<<<<< HEAD
                                              >
                                                <LinkDocumented
                                                  className="c8"
                                                  href="/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  textColour={false}
                                                >
                                                  <styled.a
                                                    className="c8"
                                                    href="/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    textColour={false}
                                                  >
                                                    <StyledComponent
                                                      className="c8"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": false,
                                                            "lastClassName": "c9",
                                                            "rules": Array [
                                                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                              ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                              "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                              "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "defaultProps": Object {
                                                            "muted": false,
                                                            "noVisitedState": false,
                                                            "textColour": false,
                                                          },
                                                          "displayName": "styled.a",
                                                          "foldedComponentIds": Array [],
                                                          "propTypes": undefined,
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": "a",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      href="/"
                                                      muted={false}
                                                      noVisitedState={false}
                                                      textColour={false}
                                                    >
                                                      <a
                                                        className="c8 c9"
                                                        href="/"
                                                        muted={false}
                                                      >
                                                        Navigation item 1
                                                      </a>
                                                    </StyledComponent>
                                                  </styled.a>
                                                </LinkDocumented>
                                              </StyledComponent>
                                            </Styled(LinkDocumented)>
=======
                                                muted={false}
                                                noVisitedState={false}
                                                textColour={false}
                                              >
                                                <a
                                                  className="c8"
                                                  href="/"
                                                  muted={false}
                                                >
                                                  Navigation item 1
                                                </a>
                                              </StyledComponent>
                                            </Styled(styled.a)>
>>>>>>> Footer component (#651)
                                          </FooterLink>
                                        </li>
                                      </StyledComponent>
                                    </styled.li>
                                  </ul>
                                </StyledComponent>
                              </styled.ul>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </NavigationLinks>
                    </div>
                  </StyledComponent>
                </styled.div>
                <styled.hr>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
<<<<<<< HEAD
                          "lastClassName": "c10",
=======
                          "lastClassName": "c9",
>>>>>>> Footer component (#651)
                          "rules": Array [
                            "margin: 0; border: 0; border-bottom: 1px solid #bfc1c3;",
                            [Function],
                          ],
                        },
                        "displayName": "styled.hr",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "hr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <hr
<<<<<<< HEAD
                      className="c10"
=======
                      className="c9"
>>>>>>> Footer component (#651)
                    />
                  </StyledComponent>
                </styled.hr>
                <MetaContainer>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bZQynM",
                            "isStatic": true,
<<<<<<< HEAD
                            "lastClassName": "c11",
=======
                            "lastClassName": "c10",
>>>>>>> Footer component (#651)
                            "rules": Array [
                              "display: flex; margin-right: -15px; margin-left: -15px; flex-wrap: wrap; align-items: flex-end; justify-content: center;",
                              "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bZQynM",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
<<<<<<< HEAD
                        className="c11"
=======
                        className="c10"
>>>>>>> Footer component (#651)
                      >
                        <styled.div
                          grow={true}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-gzVnrw",
                                  "isStatic": false,
<<<<<<< HEAD
                                  "lastClassName": "c12",
=======
                                  "lastClassName": "c11",
>>>>>>> Footer component (#651)
                                  "rules": Array [
                                    "margin-right: 15px; margin-bottom: 25px; margin-left: 15px;",
                                    [Function],
                                  ],
                                },
                                "defaultProps": Object {
                                  "grow": false,
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "grow": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-gzVnrw",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            grow={true}
                          >
                            <div
<<<<<<< HEAD
                              className="c12"
=======
                              className="c11"
>>>>>>> Footer component (#651)
                            >
                              <Licence>
                                <div>
                                  <styled.svg
                                    focusable="false"
                                    height="17"
                                    role="presentation"
                                    viewBox="0 0 483.2 195.7"
                                    width="41"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <StyledComponent
                                      focusable="false"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-htoDjs",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c13",
=======
                                            "lastClassName": "c12",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "display: inline-block; margin-right: 10px; margin-bottom: 15px; vertical-align: top; @media only screen and (min-width: 769px) {
  margin-bottom: 0;
}",
                                            ],
                                          },
                                          "displayName": "styled.svg",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-htoDjs",
                                          "target": "svg",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height="17"
                                      role="presentation"
                                      viewBox="0 0 483.2 195.7"
                                      width="41"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
<<<<<<< HEAD
                                        className="c13"
=======
                                        className="c12"
>>>>>>> Footer component (#651)
                                        focusable="false"
                                        height="17"
                                        role="presentation"
                                        viewBox="0 0 483.2 195.7"
                                        width="41"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M421.5 142.8V.1l-50.7 32.3v161.1h112.4v-50.7zm-122.3-9.6A47.12 47.12 0 0 1 221 97.8c0-26 21.1-47.1 47.1-47.1 16.7 0 31.4 8.7 39.7 21.8l42.7-27.2A97.63 97.63 0 0 0 268.1 0c-36.5 0-68.3 20.1-85.1 49.7A98 98 0 0 0 97.8 0C43.9 0 0 43.9 0 97.8s43.9 97.8 97.8 97.8c36.5 0 68.3-20.1 85.1-49.7a97.76 97.76 0 0 0 149.6 25.4l19.4 22.2h3v-87.8h-80l24.3 27.5zM97.8 145c-26 0-47.1-21.1-47.1-47.1s21.1-47.1 47.1-47.1 47.2 21 47.2 47S123.8 145 97.8 145"
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </StyledComponent>
                                  </styled.svg>
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": true,
<<<<<<< HEAD
                                            "lastClassName": "c14",
=======
                                            "lastClassName": "c13",
>>>>>>> Footer component (#651)
                                            "rules": Array [
                                              "display: inline-block;",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
<<<<<<< HEAD
                                        className="c14"
                                      >
                                        All content is available under the
                                         
                                        <FooterLink
                                          href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                          rel="license"
                                        >
                                          <Styled(LinkDocumented)
                                            href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                            rel="license"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bxivhb",
                                                    "isStatic": true,
                                                    "lastClassName": "c8",
                                                    "rules": Array [
                                                      ":link, :visited {
  color: #454a4c;
} :hover {
  color: #171819;
}",
                                                    ],
                                                  },
                                                  "displayName": "Styled(LinkDocumented)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bxivhb",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                              rel="license"
                                            >
                                              <LinkDocumented
                                                className="c8"
                                                href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                muted={false}
                                                noVisitedState={false}
                                                rel="license"
                                                textColour={false}
                                              >
                                                <styled.a
                                                  className="c8"
                                                  href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                  muted={false}
                                                  noVisitedState={false}
                                                  rel="license"
                                                  textColour={false}
                                                >
                                                  <StyledComponent
                                                    className="c8"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-htpNat",
                                                          "isStatic": false,
                                                          "lastClassName": "c9",
                                                          "rules": Array [
                                                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                                            ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                                            "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                                            "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "defaultProps": Object {
                                                          "muted": false,
                                                          "noVisitedState": false,
                                                          "textColour": false,
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "propTypes": undefined,
                                                        "render": [Function],
                                                        "styledComponentId": "sc-htpNat",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                    muted={false}
                                                    noVisitedState={false}
                                                    rel="license"
                                                    textColour={false}
                                                  >
                                                    <a
                                                      className="c8 c9"
                                                      href="https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
                                                      muted={false}
                                                      rel="license"
                                                    >
                                                      Open Government Licence v3.0
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </LinkDocumented>
                                            </StyledComponent>
                                          </Styled(LinkDocumented)>
                                        </FooterLink>
                                        , except where otherwise stated
=======
                                        className="c13"
                                      >
                                        All content is available under the Open Government Licence v3.0, except where otherwise stated
>>>>>>> Footer component (#651)
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                </div>
                              </Licence>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </MetaContainer>
              </div>
            </StyledComponent>
          </styled.div>
        </footer>
      </StyledComponent>
    </styled.footer>
  </Footer>
</FooterWithSingleNavigationLink>
`;
