// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hidden text matches the HiddenText snapshot: hidden text 1`] = `
.emotion-31 {
  margin-bottom: 20px;
}

@media only screen and (min-width:641px) {
  .emotion-31 {
    margin-bottom: 30px;
  }
}

.emotion-2 {
  cursor: pointer;
  color: #005ea5;
  font-family: "nta",Arial,sans-serif;
  font-size: 19px;
  position: relative;
  margin-bottom: 5px;
}

.emotion-2:hover {
  color: #2b8cc4;
}

.emotion-2:focus {
  outline: 4px solid #ffbf47;
  background: #ffbf47;
}

.emotion-0 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

.emotion-20 {
  margin-bottom: 0;
}

@media only screen and (min-width:641px) {
  .emotion-20 {
    margin-bottom: 0;
  }
}

.emotion-25 {
  box-sizing: border-box;
  border-left-style: solid;
  border-left-width: 5px;
  border-color: #bfc1c3;
  padding: 15px;
  margin-bottom: 0;
}

@media only screen and (min-width:641px) {
  .emotion-25 {
    margin-bottom: 0;
  }
}

.emotion-10 {
  margin-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .emotion-10 {
    margin-bottom: 20px;
  }
}

.emotion-5 {
  font-family: "nta",Arial,sans-serif;
  margin: 0;
  font-size: 16px;
  line-height: 1.25;
  margin-bottom: 15px;
}

.emotion-5 > p {
  margin: 0;
}

.emotion-5 > p > code {
  padding: 0.2em 0.4em;
  margin: 0px;
  font-size: 85%;
  background-color: rgba(27,31,35,0.05);
  border-radius: 3px;
}

.emotion-5 > pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f6f8fa;
  border-radius: 3px;
}

.emotion-5 > pre > code {
  display: inline;
  padding: 0px;
  margin: 0px;
  border: 0px;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
}

@media only screen and (min-width:641px) {
  .emotion-5 {
    font-size: 19px;
    line-height: 1.3;
  }
}

@media only screen and (min-width:641px) {
  .emotion-5 {
    margin-bottom: 20px;
  }
}

.emotion-15 {
  font-family: "nta",Arial,sans-serif;
  margin: 0;
  font-size: 16px;
  line-height: 1.25;
  margin-bottom: 0;
}

.emotion-15 > p {
  margin: 0;
}

.emotion-15 > p > code {
  padding: 0.2em 0.4em;
  margin: 0px;
  font-size: 85%;
  background-color: rgba(27,31,35,0.05);
  border-radius: 3px;
}

.emotion-15 > pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f6f8fa;
  border-radius: 3px;
}

.emotion-15 > pre > code {
  display: inline;
  padding: 0px;
  margin: 0px;
  border: 0px;
  overflow: visible;
  line-height: inherit;
  word-wrap: normal;
}

@media only screen and (min-width:641px) {
  .emotion-15 {
    font-size: 19px;
    line-height: 1.3;
  }
}

@media only screen and (min-width:641px) {
  .emotion-15 {
    margin-bottom: 0;
  }
}

<_default>
  <StyledHoc
    summaryText="Help with nationality"
  >
    <HiddenText
      className="emotion-31 emotion-4"
      summaryText="Help with nationality"
    >
      <details
        className="emotion-31 emotion-4"
      >
        <StyledSummary>
          <summary
            className="emotion-2 emotion-3"
          >
            <StyledSpan>
              <span
                className="emotion-0 emotion-1"
              >
                Help with nationality
              </span>
            </StyledSpan>
          </summary>
        </StyledSummary>
        <StyledHoc
          isNarrow={true}
          mb={0}
        >
          <InsetText
            className="emotion-20 emotion-4"
            isNarrow={true}
            mb={0}
          >
            <StyledInsetText
              className="emotion-20 emotion-4"
              isNarrow={true}
              mb={0}
            >
              <div
                className="emotion-4 emotion-25 emotion-6"
              >
                <StyledHoc
                  key="paragraphText1"
                >
                  <Paragraph
                    className="emotion-10 emotion-4"
                    supportingText={false}
                  >
                    <StyledParagraph
                      allowedTypes={
                        Array [
                          "paragraph",
                          "emphasis",
                          "strong",
                          "link",
                          "inlineCode",
                          "code",
                        ]
                      }
                      className="emotion-10 emotion-4"
                      escapeHtml={false}
                      renderers={
                        Object {
                          "link": [Function],
                        }
                      }
                      skipHtml={true}
                      source="If you’re not sure about your nationality, try to find out from an official document like a passport or national ID card."
                      supportingText={false}
                    >
                      <ReactMarkdown
                        allowedTypes={
                          Array [
                            "paragraph",
                            "emphasis",
                            "strong",
                            "link",
                            "inlineCode",
                            "code",
                          ]
                        }
                        astPlugins={Array []}
                        className="emotion-4 emotion-5 emotion-6"
                        escapeHtml={false}
                        plugins={Array []}
                        rawSourcePos={false}
                        renderers={
                          Object {
                            "link": [Function],
                          }
                        }
                        skipHtml={true}
                        source="If you’re not sure about your nationality, try to find out from an official document like a passport or national ID card."
                        sourcePos={false}
                        supportingText={false}
                        transformLinkUri={[Function]}
                      >
                        <div
                          className="emotion-4 emotion-5 emotion-6"
                          key="root-1-1"
                        >
                          <p
                            key="paragraph-1-1"
                          >
                            If you’re not sure about your nationality, try to find out from an official document like a passport or national ID card.
                          </p>
                        </div>
                      </ReactMarkdown>
                    </StyledParagraph>
                  </Paragraph>
                </StyledHoc>
                <StyledHoc
                  key="paragraphText2"
                  mb={0}
                >
                  <Paragraph
                    className="emotion-20 emotion-4"
                    mb={0}
                    supportingText={false}
                  >
                    <StyledParagraph
                      allowedTypes={
                        Array [
                          "paragraph",
                          "emphasis",
                          "strong",
                          "link",
                          "inlineCode",
                          "code",
                        ]
                      }
                      className="emotion-20 emotion-4"
                      escapeHtml={false}
                      mb={0}
                      renderers={
                        Object {
                          "link": [Function],
                        }
                      }
                      skipHtml={true}
                      source="We need to know your nationality so we can work out which elections you’re entitled to vote in. If you can’t provide your nationality, you’ll have to send copies of identity documents through the post."
                      supportingText={false}
                    >
                      <ReactMarkdown
                        allowedTypes={
                          Array [
                            "paragraph",
                            "emphasis",
                            "strong",
                            "link",
                            "inlineCode",
                            "code",
                          ]
                        }
                        astPlugins={Array []}
                        className="emotion-4 emotion-15 emotion-6"
                        escapeHtml={false}
                        mb={0}
                        plugins={Array []}
                        rawSourcePos={false}
                        renderers={
                          Object {
                            "link": [Function],
                          }
                        }
                        skipHtml={true}
                        source="We need to know your nationality so we can work out which elections you’re entitled to vote in. If you can’t provide your nationality, you’ll have to send copies of identity documents through the post."
                        sourcePos={false}
                        supportingText={false}
                        transformLinkUri={[Function]}
                      >
                        <div
                          className="emotion-4 emotion-15 emotion-6"
                          key="root-1-1"
                        >
                          <p
                            key="paragraph-1-1"
                          >
                            We need to know your nationality so we can work out which elections you’re entitled to vote in. If you can’t provide your nationality, you’ll have to send copies of identity documents through the post.
                          </p>
                        </div>
                      </ReactMarkdown>
                    </StyledParagraph>
                  </Paragraph>
                </StyledHoc>
              </div>
            </StyledInsetText>
          </InsetText>
        </StyledHoc>
      </details>
    </HiddenText>
  </StyledHoc>
</_default>
`;
